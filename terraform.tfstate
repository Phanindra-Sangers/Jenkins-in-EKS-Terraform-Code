{
  "version": 4,
  "terraform_version": "1.8.3",
  "serial": 98,
  "lineage": "29ce8ca9-316a-adfd-ee17-cfda3f97f04e",
  "outputs": {
    "configure_kubectl": {
      "value": "aws eks --region eu-central-1 update-kubeconfig --name testing-innovation-poc",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_availability_zones",
      "name": "available",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "all_availability_zones": null,
            "exclude_names": null,
            "exclude_zone_ids": null,
            "filter": null,
            "group_names": [
              "eu-central-1"
            ],
            "id": "eu-central-1",
            "names": [
              "eu-central-1a",
              "eu-central-1b",
              "eu-central-1c"
            ],
            "state": null,
            "timeouts": null,
            "zone_ids": [
              "euc1-az2",
              "euc1-az3",
              "euc1-az1"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "954503069243",
            "arn": "arn:aws:iam::954503069243:user/internal-training",
            "id": "954503069243",
            "user_id": "AIDA54PGQ7Y5XQ3D7QQED"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "testing-innovation-poc",
            "name": "testing-innovation-poc",
            "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMuZXUtY2VudHJhbC0xLmFtYXpvbmF3cy5jb20vP0FjdGlvbj1HZXRDYWxsZXJJZGVudGl0eSZWZXJzaW9uPTIwMTEtMDYtMTUmWC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBNTRQR1E3WTU1UzZBTDdNNSUyRjIwMjQwNTI1JTJGZXUtY2VudHJhbC0xJTJGc3RzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MjVUMTIxNjA3WiZYLUFtei1FeHBpcmVzPTAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JTNCeC1rOHMtYXdzLWlkJlgtQW16LVNpZ25hdHVyZT0wOWI0NmYxYzk4NTE2NDkxYzUxOWRiYTA3NWY5NjAwNGUyODY0YjI2OTQ4OTE4OGJlYTk5NmY5MDdmMDFlYmI5"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "token"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "Europe (Frankfurt)",
            "endpoint": "ec2.eu-central-1.amazonaws.com",
            "id": "eu-central-1",
            "name": "eu-central-1"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_secretsmanager_secret_version",
      "name": "jenkins_admin_password_version",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:secretsmanager:eu-central-1:954503069243:secret:testing-innovation-jenkins-poc-KEPevz",
            "created_date": "2024-05-25T11:52:18Z",
            "id": "arn:aws:secretsmanager:eu-central-1:954503069243:secret:testing-innovation-jenkins-poc-KEPevz|AWSCURRENT",
            "secret_binary": "",
            "secret_id": "arn:aws:secretsmanager:eu-central-1:954503069243:secret:testing-innovation-jenkins-poc-KEPevz",
            "secret_string": "GWC9ML7BzGURQ471",
            "version_id": "terraform-20240525115218161300000007",
            "version_stage": "AWSCURRENT",
            "version_stages": [
              "AWSCURRENT"
            ]
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "secret_binary"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "secret_string"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_secretsmanager_secret",
      "name": "jenkins",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:secretsmanager:eu-central-1:954503069243:secret:testing-innovation-jenkins-poc-KEPevz",
            "description": "",
            "force_overwrite_replica_secret": false,
            "id": "arn:aws:secretsmanager:eu-central-1:954503069243:secret:testing-innovation-jenkins-poc-KEPevz",
            "kms_key_id": "",
            "name": "testing-innovation-jenkins-poc",
            "name_prefix": "",
            "policy": "",
            "recovery_window_in_days": 0,
            "replica": [],
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_secretsmanager_secret_version",
      "name": "jenkins",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:secretsmanager:eu-central-1:954503069243:secret:testing-innovation-jenkins-poc-KEPevz",
            "id": "arn:aws:secretsmanager:eu-central-1:954503069243:secret:testing-innovation-jenkins-poc-KEPevz|terraform-20240525115218161300000007",
            "secret_binary": "",
            "secret_id": "arn:aws:secretsmanager:eu-central-1:954503069243:secret:testing-innovation-jenkins-poc-KEPevz",
            "secret_string": "GWC9ML7BzGURQ471",
            "version_id": "terraform-20240525115218161300000007",
            "version_stages": [
              "AWSCURRENT"
            ]
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "secret_binary"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "secret_string"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_secretsmanager_secret.jenkins",
            "random_password.jenkins"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "jenkins",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "jenkins",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "jenkins",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "2.440.2",
                "chart": "jenkins",
                "name": "jenkins",
                "namespace": "jenkins",
                "revision": 1,
                "values": "{\"additionalAgents\":{},\"additionalClouds\":{},\"agent\":{\"TTYEnabled\":false,\"additionalContainers\":[],\"alwaysPullImage\":false,\"annotations\":{},\"args\":\"${computer.jnlpmac} ${computer.name}\",\"command\":null,\"componentName\":\"jenkins-agent\",\"connectTimeout\":100,\"containerCap\":10,\"customJenkinsLabels\":[],\"defaultsProviderTemplate\":\"\",\"directConnection\":false,\"disableDefaultAgent\":false,\"enabled\":true,\"envVars\":[],\"hostNetworking\":false,\"idleMinutes\":0,\"image\":{\"repository\":\"524566954448.dkr.ecr.ap-south-1.amazonaws.com/jenkins-custom-image\",\"tag\":\"latest\"},\"imagePullSecretName\":null,\"jenkinsTunnel\":null,\"jenkinsUrl\":null,\"jnlpregistry\":null,\"kubernetesConnectTimeout\":5,\"kubernetesReadTimeout\":15,\"livenessProbe\":{},\"maxRequestsPerHostStr\":\"32\",\"namespace\":null,\"nodeSelector\":{},\"nodeUsageMode\":\"NORMAL\",\"podLabels\":{},\"podName\":\"default\",\"podRetention\":\"Never\",\"podTemplates\":{},\"privileged\":false,\"resources\":{\"limits\":{\"cpu\":\"1m\",\"memory\":\"2048Mi\"},\"requests\":{\"cpu\":\"1m\",\"memory\":\"1024Mi\"}},\"restrictedPssSecurityContext\":false,\"retentionTimeout\":5,\"runAsGroup\":null,\"runAsUser\":null,\"secretEnvVars\":[],\"showRawYaml\":true,\"sideContainerName\":\"jnlp\",\"volumes\":[],\"waitForPodSec\":600,\"websocket\":false,\"workingDir\":\"/home/jenkins/agent\",\"workspaceVolume\":{},\"yamlMergeStrategy\":\"override\",\"yamlTemplate\":\"\"},\"controller\":{\"JCasC\":{\"authorizationStrategy\":\"loggedInUsersCanDoAnything:\\n  allowAnonymousRead: false\",\"configScripts\":{},\"configUrls\":[],\"defaultConfig\":true,\"overwriteConfiguration\":false,\"security\":{\"apiToken\":{\"creationOfLegacyTokenEnabled\":false,\"tokenGenerationOnCreationEnabled\":false,\"usageStatisticsEnabled\":true}}},\"additionalExistingSecrets\":[],\"additionalPlugins\":[],\"additionalSecrets\":[],\"admin\":{\"createSecret\":true,\"existingSecret\":null,\"password\":\"GWC9ML7BzGURQ471\",\"passwordKey\":\"jenkins-admin-password\",\"userKey\":\"jenkins-admin-user\",\"username\":\"admin\"},\"affinity\":{},\"agentListenerEnabled\":true,\"agentListenerExternalTrafficPolicy\":null,\"agentListenerHostPort\":null,\"agentListenerLoadBalancerIP\":null,\"agentListenerLoadBalancerSourceRanges\":[\"0.0.0.0/0\"],\"agentListenerNodePort\":null,\"agentListenerPort\":50000,\"agentListenerServiceAnnotations\":{},\"agentListenerServiceType\":\"ClusterIP\",\"backendconfig\":{\"annotations\":{},\"apiVersion\":\"extensions/v1beta1\",\"enabled\":false,\"labels\":{},\"name\":null,\"spec\":{}},\"cloudName\":\"kubernetes\",\"clusterIp\":null,\"componentName\":\"jenkins-controller\",\"containerEnv\":[],\"containerEnvFrom\":[],\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":true,\"runAsGroup\":1000,\"runAsUser\":1000},\"csrf\":{\"defaultCrumbIssuer\":{\"enabled\":true,\"proxyCompatability\":true}},\"customInitContainers\":[],\"customJenkinsLabels\":[],\"disableRememberMe\":false,\"disabledAgentProtocols\":[\"JNLP-connect\",\"JNLP2-connect\"],\"enableRawHtmlMarkupFormatter\":false,\"executorMode\":\"NORMAL\",\"existingSecret\":null,\"extraPorts\":[],\"fsGroup\":1000,\"googlePodMonitor\":{\"enabled\":false,\"scrapeEndpoint\":\"/prometheus\",\"scrapeInterval\":\"60s\"},\"healthProbes\":true,\"hostAliases\":[],\"hostNetworking\":false,\"httpsKeyStore\":{\"disableSecretMount\":false,\"enable\":false,\"fileName\":\"keystore.jks\",\"httpPort\":8081,\"jenkinsHttpsJksPasswordSecretKey\":\"https-jks-password\",\"jenkinsHttpsJksPasswordSecretName\":\"\",\"jenkinsHttpsJksSecretKey\":\"jenkins-jks-file\",\"jenkinsHttpsJksSecretName\":\"\",\"jenkinsKeyStoreBase64Encoded\":null,\"password\":\"password\",\"path\":\"/var/jenkins_keystore\"},\"image\":{\"pullPolicy\":\"Always\",\"registry\":\"docker.io\",\"repository\":\"jenkins/jenkins\",\"tag\":null,\"tagLabel\":\"jdk17\"},\"imagePullSecretName\":null,\"ingress\":{\"annotations\":{\"alb.ingress.kubernetes.io/backend-protocol\":\"HTTP\",\"alb.ingress.kubernetes.io/group.name\":\"phani\",\"alb.ingress.kubernetes.io/listen-ports\":\"[{\\\"HTTP\\\": 80}]\",\"alb.ingress.kubernetes.io/scheme\":\"internet-facing\",\"alb.ingress.kubernetes.io/tags\":\"env=poc\",\"alb.ingress.kubernetes.io/target-type\":\"ip\",\"kubernetes.io/ingress.provider\":\"aws\",\"service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled\":\"true\"},\"apiVersion\":\"extensions/v1beta1\",\"enabled\":true,\"hostName\":null,\"ingressClassName\":\"alb\",\"labels\":{},\"path\":\"/-/jenkins/*\",\"paths\":[],\"resourceRootUrl\":null,\"tls\":[]},\"initConfigMap\":null,\"initContainerEnv\":[],\"initContainerEnvFrom\":[],\"initContainerResources\":{},\"initScripts\":{},\"initializeOnce\":false,\"installLatestPlugins\":true,\"installLatestSpecifiedPlugins\":false,\"installPlugins\":[\"kubernetes:4203.v1dd44f5b_1cf9\",\"workflow-aggregator:596.v8c21c963d92d\",\"git:5.2.1\",\"configuration-as-code:1775.v810dc950b_514\"],\"javaOpts\":null,\"jenkinsAdminEmail\":null,\"jenkinsHome\":\"/var/jenkins_home\",\"jenkinsOpts\":null,\"jenkinsRef\":\"/usr/share/jenkins/ref\",\"jenkinsUriPrefix\":\"/-/jenkins/\",\"jenkinsUrl\":null,\"jenkinsUrlProtocol\":\"http\",\"jenkinsWar\":\"/usr/share/jenkins/jenkins.war\",\"jmxPort\":null,\"legacyRemotingSecurityEnabled\":false,\"lifecycle\":{},\"loadBalancerIP\":null,\"loadBalancerSourceRanges\":[\"0.0.0.0/0\"],\"markupFormatter\":\"plainText\",\"nodePort\":null,\"nodeSelector\":{},\"numExecutors\":0,\"overwritePlugins\":false,\"overwritePluginsFromImage\":true,\"podAnnotations\":{},\"podDisruptionBudget\":{\"annotations\":{},\"apiVersion\":\"policy/v1beta1\",\"enabled\":false,\"labels\":{},\"maxUnavailable\":\"0\"},\"podLabels\":{},\"podSecurityContextOverride\":null,\"priorityClassName\":null,\"probes\":{\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"{{ default \\\"\\\" .Values.controller.jenkinsUriPrefix }}/login\",\"port\":\"http\"},\"initialDelaySeconds\":null,\"periodSeconds\":10,\"timeoutSeconds\":5},\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"{{ default \\\"\\\" .Values.controller.jenkinsUriPrefix }}/login\",\"port\":\"http\"},\"initialDelaySeconds\":null,\"periodSeconds\":10,\"timeoutSeconds\":5},\"startupProbe\":{\"failureThreshold\":12,\"httpGet\":{\"path\":\"{{ default \\\"\\\" .Values.controller.jenkinsUriPrefix }}/login\",\"port\":\"http\"},\"periodSeconds\":10,\"timeoutSeconds\":5}},\"projectNamingStrategy\":\"standard\",\"prometheus\":{\"alertingRulesAdditionalLabels\":{},\"alertingrules\":[],\"enabled\":false,\"metricRelabelings\":[],\"prometheusRuleNamespace\":\"\",\"relabelings\":[],\"scrapeEndpoint\":\"/prometheus\",\"scrapeInterval\":\"60s\",\"serviceMonitorAdditionalLabels\":{},\"serviceMonitorNamespace\":null},\"resources\":{\"limits\":{\"cpu\":\"2000m\",\"memory\":\"4096Mi\"},\"requests\":{\"cpu\":\"50m\",\"memory\":\"256Mi\"}},\"route\":{\"annotations\":{},\"enabled\":false,\"labels\":{},\"path\":null},\"runAsUser\":1000,\"schedulerName\":\"\",\"scriptApproval\":[],\"secondaryingress\":{\"annotations\":{},\"apiVersion\":\"extensions/v1beta1\",\"enabled\":false,\"hostName\":null,\"labels\":{},\"paths\":[],\"tls\":null},\"secretClaims\":[],\"securityContextCapabilities\":{},\"serviceAnnotations\":{},\"serviceExternalTrafficPolicy\":null,\"serviceLabels\":{},\"servicePort\":8080,\"serviceType\":\"ClusterIP\",\"shareProcessNamespace\":false,\"sidecars\":{\"additionalSidecarContainers\":[],\"configAutoReload\":{\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":true},\"enabled\":true,\"env\":{},\"envFrom\":[],\"folder\":\"/var/jenkins_home/casc_configs\",\"image\":{\"registry\":\"docker.io\",\"repository\":\"kiwigrid/k8s-sidecar\",\"tag\":\"1.26.1\"},\"imagePullPolicy\":\"IfNotPresent\",\"reqRetryConnect\":10,\"resources\":{},\"scheme\":\"http\",\"skipTlsVerify\":false,\"sleepTime\":null,\"sshTcpPort\":1044}},\"statefulSetAnnotations\":{},\"statefulSetLabels\":{},\"targetPort\":8080,\"terminationGracePeriodSeconds\":null,\"terminationMessagePath\":null,\"terminationMessagePolicy\":null,\"testEnabled\":true,\"tolerations\":[],\"updateStrategy\":{},\"usePodSecurityContext\":true},\"persistence\":{\"accessMode\":\"ReadWriteOnce\",\"annotations\":{},\"dataSource\":{},\"enabled\":true,\"existingClaim\":\"ebs-pvc\",\"labels\":{},\"mounts\":[],\"size\":\"8Gi\",\"storageClass\":\"ebs-sc\",\"subPath\":null,\"volumes\":[]}}",
                "version": "5.1.5"
              }
            ],
            "name": "jenkins",
            "namespace": "jenkins",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.jenkins.io",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "controller.admin.password",
                "type": "",
                "value": "GWC9ML7BzGURQ471"
              },
              {
                "name": "persistence.existingClaim",
                "type": "",
                "value": "ebs-pvc"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "agent:\n  # -- Enable Kubernetes plugin jnlp-agent podTemplate\n  enabled: true\n  # -- The name of the pod template to use for providing default values\n  defaultsProviderTemplate: \"\"\n\n  # For connecting to the Jenkins controller\n  # -- Overrides the Kubernetes Jenkins URL\n  jenkinsUrl:\n\n  # connects to the specified host and port, instead of connecting directly to the Jenkins controller\n  # -- Overrides the Kubernetes Jenkins tunnel\n  jenkinsTunnel:\n  # -- The connection timeout in seconds for connections to Kubernetes API. The minimum value is 5\n  kubernetesConnectTimeout: 5\n  # -- The read timeout in seconds for connections to Kubernetes API. The minimum value is 15\n  kubernetesReadTimeout: 15\n  # -- The maximum concurrent connections to Kubernetes API\n  maxRequestsPerHostStr: \"32\"\n  # -- Time in minutes after which the Kubernetes cloud plugin will clean up an idle worker that has not already terminated\n  retentionTimeout: 5\n  # -- Seconds to wait for pod to be running\n  waitForPodSec: 600\n  # -- Namespace in which the Kubernetes agents should be launched\n  namespace:\n  # -- Custom Pod labels (an object with `label-key: label-value` pairs)\n  podLabels: {}\n  # -- Custom registry used to pull the agent jnlp image from\n  jnlpregistry:\n  image:\n    # -- Repository to pull the agent jnlp image from\n    repository: \"524566954448.dkr.ecr.ap-south-1.amazonaws.com/jenkins-custom-image\"\n    # -- Tag of the image to pull\n    tag: \"latest\"\n  # -- Configure working directory for default agent\n  workingDir: \"/home/jenkins/agent\"\n  nodeUsageMode: \"NORMAL\"\n  # -- Append Jenkins labels to the agent\n  customJenkinsLabels: []\n  # -- Name of the secret to be used to pull the image\n  imagePullSecretName:\n  componentName: \"jenkins-agent\"\n  # -- Enables agent communication via websockets\n  websocket: false\n  directConnection: false\n  # -- Agent privileged container\n  privileged: false\n  # -- Configure container user\n  runAsUser:\n  # -- Configure container group\n  runAsGroup:\n  # -- Enables the agent to use the host network\n  hostNetworking: false\n  # -- Resources allocation (Requests and Limits)\n  resources:\n    requests:\n      cpu: \"1m\"\n      memory: \"1024Mi\"\n      # ephemeralStorage:\n    limits:\n      cpu: \"1m\"\n      memory: \"2048Mi\"\n      # ephemeralStorage:\n  livenessProbe: {}\n#    execArgs: \"cat /tmp/healthy\"\n#    failureThreshold: 3\n#    initialDelaySeconds: 0\n#    periodSeconds: 10\n#    successThreshold: 1\n#    timeoutSeconds: 1\n\n  # You may want to change this to true while testing a new image\n  # -- Always pull agent container image before build\n  alwaysPullImage: false\n  # When using Pod Security Admission in the Agents namespace with the restricted Pod Security Standard,\n  # the jnlp container cannot be scheduled without overriding its container definition with a securityContext.\n  # This option allows to automatically inject in the jnlp container a securityContext\n  # that is suitable for the use of the restricted Pod Security Standard.\n  # -- Set a restricted securityContext on jnlp containers\n  restrictedPssSecurityContext: false\n  # Controls how agent pods are retained after the Jenkins build completes\n  # Possible values: Always, Never, OnFailure\n  podRetention: \"Never\"\n  # Disable if you do not want the Yaml the agent pod template to show up\n  # in the job Console Output. This can be helpful for either security reasons\n  # or simply to clean up the output to make it easier to read.\n  showRawYaml: true\n\n  # You can define the volumes that you want to mount for this container\n  # Allowed types are: ConfigMap, EmptyDir, EphemeralVolume, HostPath, Nfs, PVC, Secret\n  # Configure the attributes as they appear in the corresponding Java class for that type\n  # https://github.com/jenkinsci/kubernetes-plugin/tree/master/src/main/java/org/csanchez/jenkins/plugins/kubernetes/volumes\n  # -- Additional volumes\n  volumes: []\n  # - type: ConfigMap\n  #   configMapName: myconfigmap\n  #   mountPath: /var/myapp/myconfigmap\n  # - type: EmptyDir\n  #   mountPath: /var/myapp/myemptydir\n  #   memory: false\n  # - type: EphemeralVolume\n  #   mountPath: /var/myapp/myephemeralvolume\n  #   accessModes: ReadWriteOnce\n  #   requestsSize: 10Gi\n  #   storageClassName: mystorageclass\n  # - type: HostPath\n  #   hostPath: /var/lib/containers\n  #   mountPath: /var/myapp/myhostpath\n  # - type: Nfs\n  #   mountPath: /var/myapp/mynfs\n  #   readOnly: false\n  #   serverAddress: \"192.0.2.0\"\n  #   serverPath: /var/lib/containers\n  # - type: PVC\n  #   claimName: mypvc\n  #   mountPath: /var/myapp/mypvc\n  #   readOnly: false\n  # - type: Secret\n  #   defaultMode: \"600\"\n  #   mountPath: /var/myapp/mysecret\n  #   secretName: mysecret\n  # Pod-wide environment, these vars are visible to any container in the agent pod\n\n  # You can define the workspaceVolume that you want to mount for this container\n  # Allowed types are: DynamicPVC, EmptyDir, EphemeralVolume, HostPath, Nfs, PVC\n  # Configure the attributes as they appear in the corresponding Java class for that type\n  # https://github.com/jenkinsci/kubernetes-plugin/tree/master/src/main/java/org/csanchez/jenkins/plugins/kubernetes/volumes/workspace\n  # -- Workspace volume (defaults to EmptyDir)\n  workspaceVolume: {}\n  ## DynamicPVC example\n  # - type: DynamicPVC\n  #   configMapName: myconfigmap\n  ## EmptyDir example\n  # - type: EmptyDir\n  #   memory: false\n  ## EphemeralVolume example\n  # - type: EphemeralVolume\n  #   accessModes: ReadWriteOnce\n  #   requestsSize: 10Gi\n  #   storageClassName: mystorageclass\n  ## HostPath example\n  # - type: HostPath\n  #   hostPath: /var/lib/containers\n  ## NFS example\n  # - type: Nfs\n  #   readOnly: false\n  #   serverAddress: \"192.0.2.0\"\n  #   serverPath: /var/lib/containers\n  ## PVC example\n  # - type: PVC\n  #   claimName: mypvc\n  #   readOnly: false\n\n  # Pod-wide environment, these vars are visible to any container in the agent pod\n  # -- Environment variables for the agent Pod\n  envVars: []\n  # - name: PATH\n  #   value: /usr/local/bin\n  # -- Mount a secret as environment variable\n  secretEnvVars: []\n  # - key: PATH\n  #   optional: false # default: false\n  #   secretKey: MY-K8S-PATH\n  #   secretName: my-k8s-secret\n\n  # -- Node labels for pod assignment\n  nodeSelector: {}\n  # Key Value selectors. Ex:\n  # nodeSelector\n  #   jenkins-agent: v1\n\n  # -- Command to execute when side container starts\n  command:\n  # -- Arguments passed to command to execute\n  args: \"${computer.jnlpmac} ${computer.name}\"\n  # -- Side container name\n  sideContainerName: \"jnlp\"\n\n  # Doesn't allocate pseudo TTY by default\n  # -- Allocate pseudo tty to the side container\n  TTYEnabled: false\n  # -- Max number of agents to launch\n  containerCap: 10\n  # -- Agent Pod base name\n  podName: \"default\"\n\n  # -- Allows the Pod to remain active for reuse until the configured number of minutes has passed since the last step was executed on it\n  idleMinutes: 0\n\n\n  # The raw yaml of a Pod API Object, for example, this allows usage of toleration for agent pods.\n  # https://github.com/jenkinsci/kubernetes-plugin#using-yaml-to-define-pod-templates\n  # https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n  # -- The raw yaml of a Pod API Object to merge into the agent spec\n  yamlTemplate: \"\"\n  # yamlTemplate: |-\n  #   apiVersion: v1\n  #   kind: Pod\n  #   spec:\n  #     tolerations:\n  #     - key: \"key\"\n  #       operator: \"Equal\"\n  #       value: \"value\"\n\n  # -- Defines how the raw yaml field gets merged with yaml definitions from inherited pod templates. Possible values: \"merge\" or \"override\"\n  yamlMergeStrategy: \"override\"\n  # -- Timeout in seconds for an agent to be online\n  connectTimeout: 100\n  # -- Annotations to apply to the pod\n  annotations: {}\n\n  # Containers specified here are added to all agents. Set key empty to remove container from additional agents.\n  # -- Add additional containers to the agents\n  additionalContainers: []\n  #  - sideContainerName: dind\n  #    image:\n  #      repository: docker\n  #      tag: dind\n  #    command: dockerd-entrypoint.sh\n  #    args: \"\"\n  #    privileged: true\n  #    resources:\n  #      requests:\n  #        cpu: 500m\n  #        memory: 1Gi\n  #      limits:\n  #        cpu: 1\n  #        memory: 2Gi\n\n  # Useful when configuring agents only with the podTemplates value, since the default podTemplate populated by values mentioned above will be excluded in the rendered template.\n  # -- Disable the default Jenkins Agent configuration\n  disableDefaultAgent: false\n\n  # Below is the implementation of custom pod templates for the default configured kubernetes cloud.\n  # Add a key under podTemplates for each pod template. Each key (prior to | character) is just a label, and can be any value.\n  # Keys are only used to give the pod template a meaningful name. The only restriction is they may only contain RFC 1123 \\ DNS label\n  # characters: lowercase letters, numbers, and hyphens. Each pod template can contain multiple containers.\n  # For this pod templates configuration to be loaded, the following values must be set:\n  # controller.JCasC.defaultConfig: true\n  # Best reference is https://\u003cjenkins_url\u003e/configuration-as-code/reference#Cloud-kubernetes. The example below creates a python pod template.\n  # -- Configures extra pod templates for the default kubernetes cloud\n  podTemplates: {}\n  #  python: |\n  #    - name: python\n  #      label: jenkins-python\n  #      serviceAccount: jenkins\n  #      containers:\n  #        - name: python\n  #          image: python:3\n  #          command: \"/bin/sh -c\"\n  #          args: \"cat\"\n  #          ttyEnabled: true\n  #          privileged: true\n  #          resourceRequestCpu: \"400m\"\n  #          resourceRequestMemory: \"512Mi\"\n  #          resourceLimitCpu: \"1\"\n  #          resourceLimitMemory: \"1024Mi\"\n\n# Inherits all values from `agent` so you only need to specify values which differ\n# -- Configure additional\nadditionalAgents: {}\n#  maven:\n#    podName: maven\n#    customJenkinsLabels: maven\n#    # An example of overriding the jnlp container\n#    # sideContainerName: jnlp\n#    image:\n#      repository: jenkins/jnlp-agent-maven\n#      tag: latest\n#  python:\n#    podName: python\n#    customJenkinsLabels: python\n#    sideContainerName: python\n#    image:\n#      repository: python\n#      tag: \"3\"\n#    command: \"/bin/sh -c\"\n#    args: \"cat\"\n#    TTYEnabled: true\n\n# Here you can add additional clouds\n# They inherit all values from the default cloud (including the main agent), so\n# you only need to specify values which differ. If you want to override\n# default additionalAgents with the additionalClouds.additionalAgents set\n# additionalAgentsOverride to `true`.\nadditionalClouds: {}\n#  remote-cloud-1:\n#    kubernetesURL: https://api.remote-cloud.com\n#    additionalAgentsOverride: true\n#    additionalAgents:\n#      maven-2:\n#        podName: maven-2\n#        customJenkinsLabels: maven\n#        # An example of overriding the jnlp container\n#        # sideContainerName: jnlp\n#        image:\n#          repository: jenkins/jnlp-agent-maven\n#          tag: latest\n#        namespace: my-other-maven-namespace\n#  remote-cloud-2:\n#    kubernetesURL: https://api.remote-cloud.com\n\n\ncontroller:\n  # -- Used for label app.kubernetes.io/component\n  componentName: \"jenkins-controller\"\n  image:\n    # -- Controller image registry\n    registry: \"docker.io\"\n    # -- Controller image repository\n    repository: \"jenkins/jenkins\"\n\n    # -- Controller image tag override; i.e., tag: \"2.440.1-jdk17\"\n    tag:\n\n    # -- Controller image tag label\n    tagLabel: jdk17\n    # -- Controller image pull policy\n    pullPolicy: \"Always\"\n  # -- Controller image pull secret\n  imagePullSecretName:\n  # -- Lifecycle specification for controller-container\n  lifecycle: {}\n  #  postStart:\n  #    exec:\n  #      command:\n  #      - \"uname\"\n  #      - \"-a\"\n\n  # -- Disable use of remember me\n  disableRememberMe: false\n\n  # -- Set Number of executors\n  numExecutors: 0\n\n  # -- Sets the executor mode of the Jenkins node. Possible values are \"NORMAL\" or \"EXCLUSIVE\"\n  executorMode: \"NORMAL\"\n\n  # -- Append Jenkins labels to the controller\n  customJenkinsLabels: []\n\n  hostNetworking: false\n\n  # When enabling LDAP or another non-Jenkins identity source, the built-in admin account will no longer exist.\n  # If you disable the non-Jenkins identity store and instead use the Jenkins internal one,\n  # you should revert controller.admin.username to your preferred admin user:\n  admin:\n\n    # -- Admin username created as a secret if `controller.admin.createSecret` is true\n    username: \"admin\"\n    # -- Admin password created as a secret if `controller.admin.createSecret` is true\n    # @default -- \u003crandom password\u003e\n    password: \n\n    # -- The key in the existing admin secret containing the username\n    userKey: jenkins-admin-user\n    # -- The key in the existing admin secret containing the password\n    passwordKey: jenkins-admin-password\n\n    # The default configuration uses this secret to configure an admin user\n    # If you don't need that user or use a different security realm, then you can disable it\n    # -- Create secret for admin user\n    createSecret: true\n\n    # -- The name of an existing secret containing the admin credentials\n    existingSecret: \n  # -- Email address for the administrator of the Jenkins instance\n  jenkinsAdminEmail:\n\n  # This value should not be changed unless you use your custom image of jenkins or any derived from.\n  # If you want to use Cloudbees Jenkins Distribution docker, you should set jenkinsHome: \"/var/cloudbees-jenkins-distribution\"\n  # -- Custom Jenkins home path\n  jenkinsHome: \"/var/jenkins_home\"\n\n  # This value should not be changed unless you use your custom image of jenkins or any derived from.\n  # If you want to use Cloudbees Jenkins Distribution docker, you should set jenkinsRef: \"/usr/share/cloudbees-jenkins-distribution/ref\"\n  # -- Custom Jenkins reference path\n  jenkinsRef: \"/usr/share/jenkins/ref\"\n\n  # Path to the jenkins war file which is used by jenkins-plugin-cli.\n  jenkinsWar: \"/usr/share/jenkins/jenkins.war\"\n  # Override the default arguments passed to the war\n  # overrideArgs:\n  #   - --httpPort=8080\n\n  # -- Resource allocation (Requests and Limits)\n  resources:\n    requests:\n      cpu: \"50m\"\n      memory: \"256Mi\"\n    limits:\n      cpu: \"2000m\"\n      memory: \"4096Mi\"\n\n  # Share process namespace to allow sidecar containers to interact with processes in other containers in the same pod\n  shareProcessNamespace: false\n\n  # Overrides the init container default values\n  # -- Resources allocation (Requests and Limits) for Init Container\n  initContainerResources: {}\n  # initContainerResources:\n  #   requests:\n  #     cpu: \"50m\"\n  #     memory: \"256Mi\"\n  #   limits:\n  #     cpu: \"2000m\"\n  #     memory: \"4096Mi\"\n  # -- Environment variable sources for Init Container\n  initContainerEnvFrom: []\n\n  # useful for i.e., http_proxy\n  # -- Environment variables for Init Container\n  initContainerEnv: []\n  # initContainerEnv:\n  #   - name: http_proxy\n  #     value: \"http://192.168.64.1:3128\"\n\n  # -- Environment variable sources for Jenkins Container\n  containerEnvFrom: []\n\n  # -- Environment variables for Jenkins Container\n  containerEnv: []\n  #   - name: http_proxy\n  #     value: \"http://192.168.64.1:3128\"\n\n  # Set min/max heap here if needed with \"-Xms512m -Xmx512m\"\n  # -- Append to `JAVA_OPTS` env var\n  javaOpts:\n  # -- Append to `JENKINS_OPTS` env var\n  jenkinsOpts:\n\n  # If you are using the ingress definitions provided by this chart via the `controller.ingress` block,\n  # the configured hostname will be the ingress hostname starting with `https://`\n  # or `http://` depending on the `tls` configuration.\n  # The Protocol can be overwritten by specifying `controller.jenkinsUrlProtocol`.\n  # -- Set protocol for Jenkins URL; `https` if `controller.ingress.tls`, `http` otherwise\n  jenkinsUrlProtocol: http\n\n  # -- Set Jenkins URL if you are not using the ingress definitions provided by the chart\n  jenkinsUrl:\n\n  # If you set this prefix and use ingress controller, then you might want to set the ingress path below\n  # I.e., \"/jenkins\"\n  # -- Root URI Jenkins will be served on\n  jenkinsUriPrefix: /-/jenkins/\n\n  # -- Enable pod security context (must be `true` if podSecurityContextOverride, runAsUser or fsGroup are set)\n  usePodSecurityContext: true\n\n  # Note that `runAsUser`, `fsGroup`, and `securityContextCapabilities` are\n  # being deprecated and replaced by `podSecurityContextOverride`.\n  # Set runAsUser to 1000 to let Jenkins run as non-root user 'jenkins', which exists in 'jenkins/jenkins' docker image.\n  # When configuring runAsUser to a different value than 0 also set fsGroup to the same value:\n  # -- Deprecated in favor of `controller.podSecurityContextOverride`. uid that jenkins runs with.\n  runAsUser: 1000\n\n  # -- Deprecated in favor of `controller.podSecurityContextOverride`. uid that will be used for persistent volume.\n  fsGroup: 1000\n\n  # If you have PodSecurityPolicies that require dropping of capabilities as suggested by CIS K8s benchmark, put them here\n  # securityContextCapabilities:\n  #  drop:\n  #    - NET_RAW\n  securityContextCapabilities: {}\n\n  # In the case of mounting an ext4 filesystem, it might be desirable to use `supplementalGroups` instead of `fsGroup` in\n  # the `securityContext` block: https://github.com/kubernetes/kubernetes/issues/67014#issuecomment-589915496\n  # podSecurityContextOverride:\n  #   runAsUser: 1000\n  #   runAsNonRoot: true\n  #   supplementalGroups: [1000]\n  #   capabilities: {}\n  # -- Completely overwrites the contents of the pod security context, ignoring the values provided for `runAsUser`, `fsGroup`, and `securityContextCapabilities`\n  podSecurityContextOverride: ~\n\n  # -- Allow controlling the securityContext for the jenkins container\n  containerSecurityContext:\n    runAsUser: 1000\n    runAsGroup: 1000\n    readOnlyRootFilesystem: true\n    allowPrivilegeEscalation: false\n\n  # For minikube, set this to NodePort, elsewhere uses LoadBalancer\n  # Use ClusterIP if your setup includes ingress controller\n  # -- k8s service type\n  serviceType: ClusterIP \n\n  # -- k8s service clusterIP. Only used if serviceType is ClusterIP\n  clusterIp:\n  # -- k8s service port\n  servicePort: 8080\n  # -- k8s target port\n  targetPort: 8080\n  # -- k8s node port. Only used if serviceType is NodePort\n  nodePort:\n\n  # Use Local to preserve the client source IP and avoids a second hop for LoadBalancer and NodePort type services,\n  # but risks potentially imbalanced traffic spreading.\n  serviceExternalTrafficPolicy:\n\n  # -- Jenkins controller service annotations\n  serviceAnnotations: {}\n  # -- Jenkins controller custom labels for the StatefulSet\n  statefulSetLabels: {}\n  #   foo: bar\n  #   bar: foo\n  # -- Labels for the Jenkins controller-service\n  serviceLabels: {}\n  #   service.beta.kubernetes.io/aws-load-balancer-backend-protocol: https\n\n  # Put labels on Jenkins controller pod\n  # -- Custom Pod labels (an object with `label-key: label-value` pairs)\n  podLabels: {}\n\n  # Enable Kubernetes Startup, Liveness and Readiness Probes\n  # if Startup Probe is supported, enable it too\n  # ~ 2 minutes to allow Jenkins to restart when upgrading plugins. Set ReadinessTimeout to be shorter than LivenessTimeout.\n  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes\n  # -- Enable Kubernetes Probes configuration configured in `controller.probes`\n  healthProbes: true\n\n  probes:\n    startupProbe:\n      # -- Set the failure threshold for the startup probe\n      failureThreshold: 12\n      httpGet:\n        # -- Set the Pod's HTTP path for the startup probe\n        path: '{{ default \"\" .Values.controller.jenkinsUriPrefix }}/login'\n        # -- Set the Pod's HTTP port to use for the startup probe\n        port: http\n      # -- Set the time interval between two startup probes executions in seconds\n      periodSeconds: 10\n      # -- Set the timeout for the startup probe in seconds\n      timeoutSeconds: 5\n\n    livenessProbe:\n      # -- Set the failure threshold for the liveness probe\n      failureThreshold: 5\n      httpGet:\n        # -- Set the Pod's HTTP path for the liveness probe\n        path: '{{ default \"\" .Values.controller.jenkinsUriPrefix }}/login'\n        # -- Set the Pod's HTTP port to use for the liveness probe\n        port: http\n      # -- Set the time interval between two liveness probes executions in seconds\n      periodSeconds: 10\n      # -- Set the timeout for the liveness probe in seconds\n      timeoutSeconds: 5\n\n      # If Startup Probe is not supported on your Kubernetes cluster, you might want to use \"initialDelaySeconds\" instead.\n      # It delays the initial liveness probe while Jenkins is starting\n      # -- Set the initial delay for the liveness probe in seconds\n      initialDelaySeconds:\n\n    readinessProbe:\n      # -- Set the failure threshold for the readiness probe\n      failureThreshold: 3\n      httpGet:\n        # -- Set the Pod's HTTP path for the liveness probe\n        path: '{{ default \"\" .Values.controller.jenkinsUriPrefix }}/login'\n        # -- Set the Pod's HTTP port to use for the readiness probe\n        port: http\n      # -- Set the time interval between two readiness probes executions in seconds\n      periodSeconds: 10\n      # -- Set the timeout for the readiness probe in seconds\n      timeoutSeconds: 5\n\n      # If Startup Probe is not supported on your Kubernetes cluster, you might want to use \"initialDelaySeconds\" instead.\n      # It delays the initial readiness probe while Jenkins is starting\n      # -- Set the initial delay for the readiness probe in seconds\n      initialDelaySeconds:\n\n  # PodDisruptionBudget config\n  podDisruptionBudget:\n    # ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/\n\n    # -- Enable Kubernetes Pod Disruption Budget configuration\n    enabled: false\n\n    # For Kubernetes v1.5+, use 'policy/v1beta1'\n    # For Kubernetes v1.21+, use 'policy/v1'\n    # -- Policy API version\n    apiVersion: \"policy/v1beta1\"\n\n    annotations: {}\n    labels: {}\n    # -- Number of pods that can be unavailable. Either an absolute number or a percentage\n    maxUnavailable: \"0\"\n\n  # -- Create Agent listener service\n  agentListenerEnabled: true\n  # -- Listening port for agents\n  agentListenerPort: 50000\n  # -- Host port to listen for agents\n  agentListenerHostPort:\n  # -- Node port to listen for agents\n  agentListenerNodePort:\n\n  # ref: https://kubernetes.io/docs/concepts/services-networking/service/#traffic-policies\n  # -- Traffic Policy of for the agentListener service\n  agentListenerExternalTrafficPolicy:\n  # -- Allowed inbound IP for the agentListener service\n  agentListenerLoadBalancerSourceRanges:\n  - 0.0.0.0/0\n  # -- Disabled agent protocols\n  disabledAgentProtocols:\n    - JNLP-connect\n    - JNLP2-connect\n  csrf:\n    defaultCrumbIssuer:\n      # -- Enable the default CSRF Crumb issuer\n      enabled: true\n      # -- Enable proxy compatibility\n      proxyCompatability: true\n\n  # Kubernetes service type for the JNLP agent service\n  # agentListenerServiceType is the Kubernetes Service type for the JNLP agent service,\n  # either 'LoadBalancer', 'NodePort', or 'ClusterIP'\n  # Note if you set this to 'LoadBalancer', you *must* define annotations to secure it. By default,\n  # this will be an external load balancer and allowing inbound 0.0.0.0/0, a HUGE\n  # security risk: https://github.com/kubernetes/charts/issues/1341\n  # -- Defines how to expose the agentListener service\n  agentListenerServiceType: \"ClusterIP\"\n\n  # -- Annotations for the agentListener service\n  agentListenerServiceAnnotations: {}\n\n  # Optionally, assign an IP to the LoadBalancer agentListenerService LoadBalancer\n  # GKE users: only regional static IPs will work for Service Load balancer.\n  # -- Static IP for the agentListener LoadBalancer\n  agentListenerLoadBalancerIP:\n\n  # -- Whether legacy remoting security should be enabled\n  legacyRemotingSecurityEnabled: false\n\n  # Example of a 'LoadBalancer'-type agent listener with annotations securing it\n  # agentListenerServiceType: LoadBalancer\n  # agentListenerServiceAnnotations:\n  #   service.beta.kubernetes.io/aws-load-balancer-internal: \"True\"\n  #   service.beta.kubernetes.io/load-balancer-source-ranges: \"172.0.0.0/8, 10.0.0.0/8\"\n\n  # LoadBalancerSourcesRange is a list of allowed CIDR values, which are combined with ServicePort to\n  # set allowed inbound rules on the security group assigned to the controller load balancer\n  # -- Allowed inbound IP addresses\n  loadBalancerSourceRanges:\n  - 0.0.0.0/0\n\n  # -- Optionally assign a known public LB IP\n  loadBalancerIP:\n\n  # Optionally configure a JMX port. This requires additional javaOpts, for example,\n  # javaOpts: \u003e\n  #   -Dcom.sun.management.jmxremote.port=4000\n  #   -Dcom.sun.management.jmxremote.authenticate=false\n  #   -Dcom.sun.management.jmxremote.ssl=false\n  # jmxPort: 4000\n  # -- Open a port, for JMX stats\n  jmxPort:\n\n  # -- Optionally configure other ports to expose in the controller container\n  extraPorts: []\n  # - name: BuildInfoProxy\n  #   port: 9000\n  #   targetPort: 9010 (Optional: Use to explicitly set targetPort if different from port)\n\n  # Plugins will be installed during Jenkins controller start\n  # -- List of Jenkins plugins to install. If you don't want to install plugins, set it to `false`\n  installPlugins:\n    - kubernetes:4203.v1dd44f5b_1cf9\n    - workflow-aggregator:596.v8c21c963d92d\n    - git:5.2.1\n    - configuration-as-code:1775.v810dc950b_514\n\n  # If set to false, Jenkins will download the minimum required version of all dependencies.\n  # -- Download the minimum required version or latest version of all dependencies\n  installLatestPlugins: true\n\n  # -- Set to true to download the latest version of any plugin that is requested to have the latest version\n  installLatestSpecifiedPlugins: false\n\n  # -- List of plugins to install in addition to those listed in controller.installPlugins\n  additionalPlugins: []\n\n  # Without this; whenever the controller gets restarted (Evicted, etc.) it will fetch plugin updates that have the potential to cause breakage.\n  # Note that for this to work, `persistence.enabled` needs to be set to `true`\n  # -- Initialize only on first installation. Ensures plugins do not get updated inadvertently. Requires `persistence.enabled` to be set to `true`\n  initializeOnce: false\n\n  # Enable to always override the installed plugins with the values of 'controller.installPlugins' on upgrade or redeployment.\n  # -- Overwrite installed plugins on start\n  overwritePlugins: false\n\n  # Configures if plugins bundled with `controller.image` should be overwritten with the values of 'controller.installPlugins' on upgrade or redeployment.\n  # -- Overwrite plugins that are already installed in the controller image\n  overwritePluginsFromImage: true\n\n  # Configures the restrictions for naming projects. Set this key to null or empty to skip it in the default config.\n  projectNamingStrategy: standard\n\n  # Useful with ghprb plugin. The OWASP plugin is not installed by default, please update controller.installPlugins.\n  # -- Enable HTML parsing using OWASP Markup Formatter Plugin (antisamy-markup-formatter)\n  enableRawHtmlMarkupFormatter: false\n\n  # This is ignored if enableRawHtmlMarkupFormatter is true\n  # -- Yaml of the markup formatter to use\n  markupFormatter: plainText\n\n  # Used to approve a list of groovy functions in pipelines used the script-security plugin. Can be viewed under /scriptApproval\n  # -- List of groovy functions to approve\n  scriptApproval: []\n  #  - \"method groovy.json.JsonSlurperClassic parseText java.lang.String\"\n  #  - \"new groovy.json.JsonSlurperClassic\"\n\n  # -- Map of groovy init scripts to be executed during Jenkins controller start\n  initScripts: {}\n  #  test: |-\n  #    print 'adding global pipeline libraries, register properties, bootstrap jobs...'\n  # -- Name of the existing ConfigMap that contains init scripts\n  initConfigMap:\n\n  existingSecret:\n\n  # -- List of additional existing secrets to mount\n  additionalExistingSecrets: []\n  # ref: https://github.com/jenkinsci/configuration-as-code-plugin/blob/master/docs/features/secrets.adoc#kubernetes-secrets\n  # additionalExistingSecrets:\n  #  - name: secret-name-1\n  #    keyName: username\n  #  - name: secret-name-1\n  #    keyName: password\n\n  # -- List of additional secrets to create and mount\n  additionalSecrets: []\n  # ref: https://github.com/jenkinsci/configuration-as-code-plugin/blob/master/docs/features/secrets.adoc#kubernetes-secrets\n  # additionalSecrets:\n  #  - name: nameOfSecret\n  #    value: secretText\n\n  # Generate SecretClaim resources to create Kubernetes secrets from HashiCorp Vault using kube-vault-controller.\n  # 'name' is the name of the secret that will be created in Kubernetes. The Jenkins fullname is prepended to this value.\n  # 'path' is the fully qualified path to the secret in Vault\n  # 'type' is an optional Kubernetes secret type. The default is 'Opaque'\n  # 'renew' is an optional secret renewal time in seconds\n  # -- List of `SecretClaim` resources to create\n  secretClaims: []\n  # - name: secretName        # required\n  #   path: testPath          # required\n  #   type: kubernetes.io/tls # optional\n  #   renew: 60               # optional\n\n  # -- Name of default cloud configuration.\n  cloudName: \"kubernetes\"\n\n  # Below is the implementation of Jenkins Configuration as Code. Add a key under configScripts for each configuration area,\n  # where each corresponds to a plugin or section of the UI. Each key (prior to | character) is just a label, and can be any value.\n  # Keys are only used to give the section a meaningful name. The only restriction is they may only contain RFC 1123 \\ DNS label\n  # characters: lowercase letters, numbers, and hyphens. The keys become the name of a configuration yaml file on the controller in\n  # /var/jenkins_home/casc_configs (by default) and will be processed by the Configuration as Code Plugin. The lines after each |\n  # become the content of the configuration yaml file. The first line after this is a JCasC root element, e.g., jenkins, credentials,\n  # etc. Best reference is https://\u003cjenkins_url\u003e/configuration-as-code/reference. The example below creates a welcome message:\n  JCasC:\n    # -- Enables default Jenkins configuration via configuration as code plugin\n    defaultConfig: true\n\n    # If true, the init container deletes all the plugin config files and Jenkins Config as Code overwrites any existing configuration\n    # -- Whether Jenkins Config as Code should overwrite any existing configuration\n    overwriteConfiguration: false\n    # -- Remote URLs for configuration files.\n    configUrls: []\n    # - https://acme.org/jenkins.yaml\n    # -- List of Jenkins Config as Code scripts\n    configScripts: {}\n    #  welcome-message: |\n    #    jenkins:\n    #      systemMessage: Welcome to our CI\\CD server. This Jenkins is configured and managed 'as code'.\n\n    # Allows adding to the top-level security JCasC section. For legacy purposes, by default, the chart includes apiToken configurations\n    # -- Jenkins Config as Code security-section\n    security:\n      apiToken:\n        creationOfLegacyTokenEnabled: false\n        tokenGenerationOnCreationEnabled: false\n        usageStatisticsEnabled: true\n\n\n\n    # Ignored if authorizationStrategy is defined in controller.JCasC.configScripts\n    # -- Jenkins Config as Code Authorization Strategy-section\n    authorizationStrategy: |-\n      loggedInUsersCanDoAnything:\n        allowAnonymousRead: false\n  # -- Custom init-container specification in raw-yaml format\n  customInitContainers: []\n  # - name: custom-init\n  #   image: \"alpine:3\"\n  #   imagePullPolicy: Always\n  #   command: [ \"uname\", \"-a\" ]\n\n  sidecars:\n    configAutoReload:\n      # If enabled: true, Jenkins Configuration as Code will be reloaded on-the-fly without a reboot.\n      # If false or not-specified, JCasC changes will cause a reboot and will only be applied at the subsequent start-up.\n      # Auto-reload uses the http://\u003cjenkins_url\u003e/reload-configuration-as-code endpoint to reapply config when changes to\n      # the configScripts are detected.\n      # -- Enables Jenkins Config as Code auto-reload\n      enabled: true\n      image:\n        # -- Registry for the image that triggers the reload\n        registry: docker.io\n        # -- Repository of the image that triggers the reload\n        repository: kiwigrid/k8s-sidecar\n        # -- Tag for the image that triggers the reload\n        tag: 1.26.1\n      imagePullPolicy: IfNotPresent\n      resources: {}\n        #   limits:\n        #     cpu: 100m\n        #     memory: 100Mi\n        #   requests:\n        #     cpu: 50m\n        #     memory: 50Mi\n\n      # -- The scheme to use when connecting to the Jenkins configuration as code endpoint\n      scheme: http\n      # -- Skip TLS verification when connecting to the Jenkins configuration as code endpoint\n      skipTlsVerify: false\n\n      # -- How many connection-related errors to retry on\n      reqRetryConnect: 10\n      # -- How many seconds to wait before updating config-maps/secrets (sets METHOD=SLEEP on the sidecar)\n      sleepTime:\n\n      # -- Environment variable sources for the Jenkins Config as Code auto-reload container\n      envFrom: []\n      # -- Environment variables for the Jenkins Config as Code auto-reload container\n      env: {}\n      #   - name: REQ_TIMEOUT\n      #     value: \"30\"\n\n      # SSH port value can be set to any unused TCP port. The default, 1044, is a non-standard SSH port that has been chosen at random.\n      # This is only used to reload JCasC config from the sidecar container running in the Jenkins controller pod.\n      # This TCP port will not be open in the pod (unless you specifically configure this), so Jenkins will not be\n      # accessible via SSH from outside the pod. Note if you use non-root pod privileges (runAsUser \u0026 fsGroup),\n      # this must be \u003e 1024:\n      sshTcpPort: 1044\n      # folder in the pod that should hold the collected dashboards:\n      folder: \"/var/jenkins_home/casc_configs\"\n\n      # If specified, the sidecar will search for JCasC config-maps inside this namespace.\n      # Otherwise, the namespace in which the sidecar is running will be used.\n      # It's also possible to specify ALL to search in all namespaces:\n      # searchNamespace:\n      # -- Enable container security context\n      containerSecurityContext:\n        readOnlyRootFilesystem: true\n        allowPrivilegeEscalation: false\n\n    # -- Configures additional sidecar container(s) for the Jenkins controller\n    additionalSidecarContainers: []\n    ## The example below runs the client for https://smee.io as sidecar container next to Jenkins,\n    ## that allows triggering build behind a secure firewall.\n    ## https://jenkins.io/blog/2019/01/07/webhook-firewalls/#triggering-builds-with-webhooks-behind-a-secure-firewall\n    ##\n    ## Note: To use it you should go to https://smee.io/new and update the url to the generated one.\n    # - name: smee\n    #   image: docker.io/twalter/smee-client:1.0.2\n    #   args: [\"--port\", \"{{ .Values.controller.servicePort }}\", \"--path\", \"/github-webhook/\", \"--url\", \"https://smee.io/new\"]\n    #   resources:\n    #     limits:\n    #       cpu: 50m\n    #       memory: 128Mi\n    #     requests:\n    #       cpu: 10m\n    #       memory: 32Mi\n\n  # -- Name of the Kubernetes scheduler to use\n  schedulerName: \"\"\n\n  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector\n  # -- Node labels for pod assignment\n  nodeSelector: {}\n\n  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature\n  # -- Toleration labels for pod assignment\n  tolerations: []\n  # -- Set TerminationGracePeriodSeconds\n  terminationGracePeriodSeconds:\n  # -- Set the termination message path\n  terminationMessagePath:\n  # -- Set the termination message policy\n  terminationMessagePolicy:\n\n  # -- Affinity settings\n  affinity: {}\n\n  # Leverage a priorityClass to ensure your pods survive resource shortages\n  # ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/\n  # -- The name of a `priorityClass` to apply to the controller pod\n  priorityClassName:\n\n  # -- Annotations for controller pod\n  podAnnotations: {}\n  # -- Annotations for controller StatefulSet\n  statefulSetAnnotations: {}\n\n  # ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies\n  # -- Update strategy for StatefulSet\n  updateStrategy: {}\n\n  ingress:\n    # -- Enables ingress\n    enabled: true \n\n    # Override for the default paths that map requests to the backend\n    # -- Override for the default Ingress paths\n    paths: []\n    # - backend:\n    #     serviceName: ssl-redirect\n    #     servicePort: use-annotation\n    # - backend:\n    #     serviceName: \u003e-\n    #       {{ template \"jenkins.fullname\" . }}\n    #     # Don't use string here, use only integer value!\n    #     servicePort: 8080\n\n    # For Kubernetes v1.14+, use 'networking.k8s.io/v1beta1'\n    # For Kubernetes v1.19+, use 'networking.k8s.io/v1'\n    # -- Ingress API version\n    apiVersion: \"extensions/v1beta1\"\n    # -- Ingress labels\n    labels: {}\n    # -- Ingress annotations\n    annotations: \n      alb.ingress.kubernetes.io/backend-protocol: HTTP\n      alb.ingress.kubernetes.io/group.name: phani\n      alb.ingress.kubernetes.io/listen-ports:  '[{\"HTTP\": 80}]'\n      alb.ingress.kubernetes.io/scheme: internet-facing\n      alb.ingress.kubernetes.io/tags: env=poc\n      alb.ingress.kubernetes.io/target-type: ip\n      kubernetes.io/ingress.provider: aws\n      service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'\n      # kubernetes.io/ingress.class: nginx\n      # kubernetes.io/tls-acme: \"true\"\n    # For Kubernetes \u003e= 1.18 you should specify the ingress-controller via the field ingressClassName\n    # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress\n    ingressClassName: alb\n\n    # Set this path to jenkinsUriPrefix above or use annotations to rewrite path\n    # -- Ingress path\n    path: \"/-/jenkins/*\"\n\n    # configures the hostname e.g. jenkins.example.com\n    # -- Ingress hostname\n    hostName:\n    # -- Hostname to serve assets from\n    resourceRootUrl:\n    # -- Ingress TLS configuration\n    tls: []\n    # - secretName: jenkins.cluster.local\n    #   hosts:\n    #     - jenkins.cluster.local\n\n  # often you want to have your controller all locked down and private,\n  # but you still want to get webhooks from your SCM\n  # A secondary ingress will let you expose different urls\n  # with a different configuration\n  secondaryingress:\n    enabled: false\n    # paths you want forwarded to the backend\n    # ex /github-webhook\n    paths: []\n    # For Kubernetes v1.14+, use 'networking.k8s.io/v1beta1'\n    # For Kubernetes v1.19+, use 'networking.k8s.io/v1'\n    apiVersion: \"extensions/v1beta1\"\n    labels: {}\n    annotations: {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n    # For Kubernetes \u003e= 1.18 you should specify the ingress-controller via the field ingressClassName\n    # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress\n    # ingressClassName: nginx\n    # configures the hostname e.g., jenkins-external.example.com\n    hostName:\n    tls:\n    # - secretName: jenkins-external.example.com\n    #   hosts:\n    #     - jenkins-external.example.com\n\n  # If you're running on GKE and need to configure a backendconfig\n  # to finish ingress setup, use the following values.\n  # Docs: https://cloud.google.com/kubernetes-engine/docs/concepts/backendconfig\n  backendconfig:\n    # -- Enables backendconfig\n    enabled: false\n    # -- backendconfig API version\n    apiVersion: \"extensions/v1beta1\"\n    # -- backendconfig name\n    name:\n    # -- backendconfig labels\n    labels: {}\n    # -- backendconfig annotations\n    annotations: {}\n    # -- backendconfig spec\n    spec: {}\n\n  # Openshift route\n  route:\n    # -- Enables openshift route\n    enabled: false\n    # -- Route labels\n    labels: {}\n    # -- Route annotations\n    annotations: {}\n    # -- Route path\n    path:\n\n  # -- Allows for adding entries to Pod /etc/hosts\n  hostAliases: []\n  # ref: https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/\n  # hostAliases:\n  # - ip: 192.168.50.50\n  #   hostnames:\n  #     - something.local\n  # - ip: 10.0.50.50\n  #   hostnames:\n  #     - other.local\n\n  # Expose Prometheus metrics\n  prometheus:\n    # If enabled, add the prometheus plugin to the list of plugins to install\n    # https://plugins.jenkins.io/prometheus\n\n    # -- Enables prometheus service monitor\n    enabled: false\n    # -- Additional labels to add to the service monitor object\n    serviceMonitorAdditionalLabels: {}\n    # -- Set a custom namespace where to deploy ServiceMonitor resource\n    serviceMonitorNamespace:\n    # -- How often prometheus should scrape metrics\n    scrapeInterval: 60s\n\n    # Defaults to the default endpoint used by the prometheus plugin\n    # -- The endpoint prometheus should get metrics from\n    scrapeEndpoint: /prometheus\n\n    # See here: https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/\n    # The `groups` root object is added by default, add the rule entries\n    # -- Array of prometheus alerting rules\n    alertingrules: []\n    # -- Additional labels to add to the PrometheusRule object\n    alertingRulesAdditionalLabels: {}\n    # -- Set a custom namespace where to deploy PrometheusRule resource\n    prometheusRuleNamespace: \"\"\n\n    # RelabelConfigs to apply to samples before scraping. Prometheus Operator automatically adds\n    # relabelings for a few standard Kubernetes fields. The original scrape job’s name\n    # is available via the __tmp_prometheus_job_name label.\n    # More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config\n    relabelings: []\n    # MetricRelabelConfigs to apply to samples before ingestion.\n    metricRelabelings: []\n\n  googlePodMonitor:\n    # If enabled, It creates Google Managed Prometheus scraping config\n    enabled: false\n    # Set a custom namespace where to deploy PodMonitoring resource\n    # serviceMonitorNamespace: \"\"\n    scrapeInterval: 60s\n    # This is the default endpoint used by the prometheus plugin\n    scrapeEndpoint: /prometheus\n\n  # -- Can be used to disable rendering controller test resources when using helm template\n  testEnabled: true\n\n  httpsKeyStore:\n    # -- Enables HTTPS keystore on jenkins controller\n    enable: false\n    # -- Name of the secret that already has ssl keystore\n    jenkinsHttpsJksSecretName: \"\"\n    # -- Name of the key in the secret that already has ssl keystore\n    jenkinsHttpsJksSecretKey: \"jenkins-jks-file\"\n    # -- Name of the secret that contains the JKS password, if it is not in the same secret as the JKS file\n    jenkinsHttpsJksPasswordSecretName: \"\"\n    # -- Name of the key in the secret that contains the JKS password\n    jenkinsHttpsJksPasswordSecretKey: \"https-jks-password\"\n    disableSecretMount: false\n\n    # When HTTPS keystore is enabled, servicePort and targetPort will be used as HTTPS port\n    # -- HTTP Port that Jenkins should listen to along with HTTPS, it also serves as the liveness and readiness probes port.\n    httpPort: 8081\n    # -- Path of HTTPS keystore file\n    path: \"/var/jenkins_keystore\"\n    # -- Jenkins keystore filename which will appear under controller.httpsKeyStore.path\n    fileName: \"keystore.jks\"\n    # -- Jenkins keystore password\n    password: \"password\"\n\n    # -- Base64 encoded Keystore content. Keystore must be converted to base64 then being pasted here\n    jenkinsKeyStoreBase64Encoded:\n    # Convert keystore.jks files content to base64 \u003e $ cat keystore.jks | base64\n\n\n\npersistence:\n  # -- Enable the use of a Jenkins PVC\n  enabled: true\n\n  # A manually managed Persistent Volume and Claim\n  # Requires persistence.enabled: true\n  # If defined, PVC must be created manually before volume will be bound\n  # -- Provide the name of a PVC\n  existingClaim:  \n\n  # jenkins data Persistent Volume Storage Class\n  # If defined, storageClassName: \u003cstorageClass\u003e\n  # If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n  # If undefined (the default) or set to null, no storageClassName spec is\n  #   set, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS \u0026 OpenStack)\n  # -- Storage class for the PVC\n  storageClass: ebs-sc\n  # -- Annotations for the PVC\n  annotations: {}\n  # -- Labels for the PVC\n  labels: {}\n  # -- The PVC access mode\n  accessMode: \"ReadWriteOnce\"\n  # -- The size of the PVC\n  size: \"8Gi\"\n\n  # ref: https://kubernetes.io/docs/concepts/storage/volume-pvc-datasource/\n  # -- Existing data source to clone PVC from\n  dataSource: {}\n  #   name: PVC-NAME\n  #   kind: PersistentVolumeClaim\n\n  # -- SubPath for jenkins-home mount\n  subPath:\n  # -- Additional volumes\n  volumes: []\n  #  - name: nothing\n  #    emptyDir: {}\n\n  # -- Additional mounts\n  mounts: []\n  #  - mountPath: /var/nothing\n  #    name: nothing\n  #    readOnly: true\n"
            ],
            "verify": false,
            "version": "5.1.5",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "set"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_secretsmanager_secret.jenkins",
            "aws_secretsmanager_secret_version.jenkins",
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.this",
            "data.aws_secretsmanager_secret_version.jenkins_admin_password_version",
            "kubernetes_namespace_v1.jenkins",
            "module.ebs_csi_driver_irsa.aws_iam_role.this",
            "module.ebs_csi_driver_irsa.data.aws_caller_identity.current",
            "module.ebs_csi_driver_irsa.data.aws_iam_policy_document.this",
            "module.ebs_csi_driver_irsa.data.aws_partition.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_addon.before_compute",
            "module.eks.aws_eks_addon.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_eks_identity_provider_config.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.efa",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_alias.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_grant.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_ami.eks_default",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_subnets.efa",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_password.jenkins"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "jenkins_ebs_pvc",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/jenkins/persistentvolumeclaims/ebs-pvc",
            "ignore_fields": null,
            "kind": "PersistentVolumeClaim",
            "live_manifest_incluster": "36c59eac360e5755b6521a36acea5d3191d8364f4914926cc2d4531242213501",
            "live_uid": "c1b908a5-f112-4fcd-b584-5bc19daea78e",
            "name": "ebs-pvc",
            "namespace": "jenkins",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "c1b908a5-f112-4fcd-b584-5bc19daea78e",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: ebs-pvc\n  namespace: jenkins \nspec:\n  accessModes:\n    - ReadWriteOnce\n  storageClassName: ebs-sc\n  resources:\n    requests:\n      storage: 50Gi\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: ebs-pvc\n  namespace: jenkins\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 50Gi\n  storageClassName: ebs-sc\n",
            "yaml_incluster": "36c59eac360e5755b6521a36acea5d3191d8364f4914926cc2d4531242213501"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.this",
            "kubectl_manifest.jenkins_ebs_sc",
            "kubernetes_namespace_v1.jenkins",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "jenkins_ebs_sc",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "api_version": "storage.k8s.io/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/storage.k8s.io/v1/storageclasses/ebs-sc",
            "ignore_fields": null,
            "kind": "StorageClass",
            "live_manifest_incluster": "a9b4b22298b17b37ac3944288a23fc6dbe34b47bfe1de10db38315a06af4e2db",
            "live_uid": "8e342c5f-1312-4176-9311-53981a961b5a",
            "name": "ebs-sc",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "8e342c5f-1312-4176-9311-53981a961b5a",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: ebs-sc\nprovisioner: ebs.csi.aws.com\nparameters:\n  type: gp3\n  fsType: ext4  \n",
            "yaml_body_parsed": "apiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: ebs-sc\nparameters:\n  fsType: ext4\n  type: gp3\nprovisioner: ebs.csi.aws.com\n",
            "yaml_incluster": "a9b4b22298b17b37ac3944288a23fc6dbe34b47bfe1de10db38315a06af4e2db"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.this",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "jenkins_secret",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/jenkins/secrets/jenkins",
            "ignore_fields": null,
            "kind": "Secret",
            "live_manifest_incluster": "479fda480a4558fc403b75c5a8d474eeb333934a5b6e5555afa68e446b98655c",
            "live_uid": "3f5e64f4-9189-4284-8055-c853213eb71e",
            "name": "jenkins",
            "namespace": "jenkins",
            "override_namespace": null,
            "sensitive_fields": [
              "data.jenkins-admin-password"
            ],
            "server_side_apply": false,
            "timeouts": null,
            "uid": "3f5e64f4-9189-4284-8055-c853213eb71e",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Secret\nmetadata:\n   name: \"jenkins\"\n   namespace: jenkins\n   labels:\n    app.kubernetes.io/managed-by: \"Helm\"\n   annotations:\n    meta.helm.sh/release-name: \"jenkins\"\n    meta.helm.sh/release-namespace: \"jenkins\"\ntype: Opaque\ndata:\n  jenkins-admin-password: R1dDOU1MN0J6R1VSUTQ3MQ==\n  jenkins-admin-user: YWRtaW4=\n",
            "yaml_body_parsed": "apiVersion: v1\ndata:\n  jenkins-admin-password: (sensitive value)\n  jenkins-admin-user: YWRtaW4=\nkind: Secret\nmetadata:\n  annotations:\n    meta.helm.sh/release-name: jenkins\n    meta.helm.sh/release-namespace: jenkins\n  labels:\n    app.kubernetes.io/managed-by: Helm\n  name: jenkins\n  namespace: jenkins\ntype: Opaque\n",
            "yaml_incluster": "479fda480a4558fc403b75c5a8d474eeb333934a5b6e5555afa68e446b98655c"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_secretsmanager_secret.jenkins",
            "aws_secretsmanager_secret_version.jenkins",
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.this",
            "kubernetes_namespace_v1.jenkins",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "random_password.jenkins"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace_v1",
      "name": "jenkins",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "jenkins",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "jenkins",
                "resource_version": "4129",
                "uid": "9f8e8510-0983-4dcb-8d89-d91767f091e6"
              }
            ],
            "timeouts": {
              "delete": "15m"
            },
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjo5MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.this",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_password",
      "name": "jenkins",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 3,
          "attributes": {
            "bcrypt_hash": "$2a$10$kWkoWmUbrmZOEmQAahKpdO8hYoJbKwGOU7UZdLW8wKSTiYMXLTR.m",
            "id": "none",
            "keepers": null,
            "length": 16,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": "@_",
            "result": "GWC9ML7BzGURQ471",
            "special": true,
            "upper": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "result"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "bcrypt_hash"
              }
            ]
          ]
        }
      ]
    },
    {
      "module": "module.ebs_csi_driver_irsa",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "954503069243",
            "arn": "arn:aws:iam::954503069243:user/internal-training",
            "id": "954503069243",
            "user_id": "AIDA54PGQ7Y5XQ3D7QQED"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.ebs_csi_driver_irsa",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "ebs_csi",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "212299854",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:ModifyVolume\",\n        \"ec2:EnableFastSnapshotRestores\",\n        \"ec2:DetachVolume\",\n        \"ec2:DescribeVolumesModifications\",\n        \"ec2:DescribeVolumes\",\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeSnapshots\",\n        \"ec2:DescribeInstances\",\n        \"ec2:DescribeAvailabilityZones\",\n        \"ec2:CreateSnapshot\",\n        \"ec2:AttachVolume\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateTags\",\n      \"Resource\": [\n        \"arn:aws:ec2:*:*:volume/*\",\n        \"arn:aws:ec2:*:*:snapshot/*\"\n      ],\n      \"Condition\": {\n        \"StringEquals\": {\n          \"ec2:CreateAction\": [\n            \"CreateVolume\",\n            \"CreateSnapshot\"\n          ]\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DeleteTags\",\n      \"Resource\": [\n        \"arn:aws:ec2:*:*:volume/*\",\n        \"arn:aws:ec2:*:*:snapshot/*\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateVolume\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"aws:RequestTag/ebs.csi.aws.com/cluster\": \"true\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateVolume\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"aws:RequestTag/CSIVolumeName\": \"*\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateVolume\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"aws:RequestTag/kubernetes.io/cluster/*\": \"owned\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DeleteVolume\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/ebs.csi.aws.com/cluster\": \"true\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DeleteVolume\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/CSIVolumeName\": \"*\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DeleteVolume\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/kubernetes.io/cluster/*\": \"owned\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DeleteVolume\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/kubernetes.io/created-for/pvc/name\": \"*\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DeleteSnapshot\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/CSIVolumeSnapshotName\": \"*\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DeleteSnapshot\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/ebs.csi.aws.com/cluster\": \"true\"\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "ec2:AttachVolume",
                  "ec2:CreateSnapshot",
                  "ec2:DescribeAvailabilityZones",
                  "ec2:DescribeInstances",
                  "ec2:DescribeSnapshots",
                  "ec2:DescribeTags",
                  "ec2:DescribeVolumes",
                  "ec2:DescribeVolumesModifications",
                  "ec2:DetachVolume",
                  "ec2:EnableFastSnapshotRestores",
                  "ec2:ModifyVolume"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateTags"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "CreateVolume",
                      "CreateSnapshot"
                    ],
                    "variable": "ec2:CreateAction"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:snapshot/*",
                  "arn:aws:ec2:*:*:volume/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DeleteTags"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:snapshot/*",
                  "arn:aws:ec2:*:*:volume/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateVolume"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "true"
                    ],
                    "variable": "aws:RequestTag/ebs.csi.aws.com/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateVolume"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "*"
                    ],
                    "variable": "aws:RequestTag/CSIVolumeName"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateVolume"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "owned"
                    ],
                    "variable": "aws:RequestTag/kubernetes.io/cluster/*"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DeleteVolume"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "true"
                    ],
                    "variable": "ec2:ResourceTag/ebs.csi.aws.com/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DeleteVolume"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "*"
                    ],
                    "variable": "ec2:ResourceTag/CSIVolumeName"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DeleteVolume"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "owned"
                    ],
                    "variable": "ec2:ResourceTag/kubernetes.io/cluster/*"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DeleteVolume"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "*"
                    ],
                    "variable": "ec2:ResourceTag/kubernetes.io/created-for/pvc/name"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DeleteSnapshot"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "*"
                    ],
                    "variable": "ec2:ResourceTag/CSIVolumeSnapshotName"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DeleteSnapshot"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "true"
                    ],
                    "variable": "ec2:ResourceTag/ebs.csi.aws.com/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.ebs_csi_driver_irsa",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "284027328",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::954503069243:oidc-provider/oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41:aud\": \"sts.amazonaws.com\",\n          \"oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41:sub\": \"system:serviceaccount:kube-system:ebs-csi-controller-sa\"\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "sts.amazonaws.com"
                    ],
                    "variable": "oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41:aud"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:kube-system:ebs-csi-controller-sa"
                    ],
                    "variable": "oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::954503069243:oidc-provider/oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.ebs_csi_driver_irsa",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.ebs_csi_driver_irsa",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "Europe (Frankfurt)",
            "endpoint": "ec2.eu-central-1.amazonaws.com",
            "id": "eu-central-1",
            "name": "eu-central-1"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.ebs_csi_driver_irsa",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "ebs_csi",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::954503069243:policy/AmazonEKS_EBS_CSI_Policy-20240525115217391500000001",
            "description": "Provides permissions to manage EBS volumes via the container storage interface driver",
            "id": "arn:aws:iam::954503069243:policy/AmazonEKS_EBS_CSI_Policy-20240525115217391500000001",
            "name": "AmazonEKS_EBS_CSI_Policy-20240525115217391500000001",
            "name_prefix": "AmazonEKS_EBS_CSI_Policy-",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"ec2:ModifyVolume\",\"ec2:EnableFastSnapshotRestores\",\"ec2:DetachVolume\",\"ec2:DescribeVolumesModifications\",\"ec2:DescribeVolumes\",\"ec2:DescribeTags\",\"ec2:DescribeSnapshots\",\"ec2:DescribeInstances\",\"ec2:DescribeAvailabilityZones\",\"ec2:CreateSnapshot\",\"ec2:AttachVolume\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:CreateTags\",\"Condition\":{\"StringEquals\":{\"ec2:CreateAction\":[\"CreateVolume\",\"CreateSnapshot\"]}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:ec2:*:*:volume/*\",\"arn:aws:ec2:*:*:snapshot/*\"]},{\"Action\":\"ec2:DeleteTags\",\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:ec2:*:*:volume/*\",\"arn:aws:ec2:*:*:snapshot/*\"]},{\"Action\":\"ec2:CreateVolume\",\"Condition\":{\"StringLike\":{\"aws:RequestTag/ebs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:CreateVolume\",\"Condition\":{\"StringLike\":{\"aws:RequestTag/CSIVolumeName\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:CreateVolume\",\"Condition\":{\"StringLike\":{\"aws:RequestTag/kubernetes.io/cluster/*\":\"owned\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:DeleteVolume\",\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/ebs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:DeleteVolume\",\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/CSIVolumeName\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:DeleteVolume\",\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/kubernetes.io/cluster/*\":\"owned\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:DeleteVolume\",\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/kubernetes.io/created-for/pvc/name\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:DeleteSnapshot\",\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/CSIVolumeSnapshotName\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:DeleteSnapshot\",\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/ebs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA54PGQ7Y55P7Y5GVD6",
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "TeamName": "RnD"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "TeamName": "RnD"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.ebs_csi_driver_irsa.data.aws_iam_policy_document.ebs_csi",
            "module.ebs_csi_driver_irsa.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.ebs_csi_driver_irsa",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::954503069243:role/testing-innovation-ebs-csi-driver20240525120153009900000015",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41:aud\":\"sts.amazonaws.com\",\"oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41:sub\":\"system:serviceaccount:kube-system:ebs-csi-controller-sa\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::954503069243:oidc-provider/oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-05-25T12:01:53Z",
            "description": "",
            "force_detach_policies": true,
            "id": "testing-innovation-ebs-csi-driver20240525120153009900000015",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::954503069243:policy/AmazonEKS_EBS_CSI_Policy-20240525115217391500000001"
            ],
            "max_session_duration": 3600,
            "name": "testing-innovation-ebs-csi-driver20240525120153009900000015",
            "name_prefix": "testing-innovation-ebs-csi-driver",
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "TeamName": "RnD"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "TeamName": "RnD"
            },
            "unique_id": "AROA54PGQ7Y57QIDFQA4J"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.ebs_csi_driver_irsa.data.aws_caller_identity.current",
            "module.ebs_csi_driver_irsa.data.aws_iam_policy_document.this",
            "module.ebs_csi_driver_irsa.data.aws_partition.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.ebs_csi_driver_irsa",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "ebs_csi",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "testing-innovation-ebs-csi-driver20240525120153009900000015-20240525120153571000000016",
            "policy_arn": "arn:aws:iam::954503069243:policy/AmazonEKS_EBS_CSI_Policy-20240525115217391500000001",
            "role": "testing-innovation-ebs-csi-driver20240525120153009900000015"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.ebs_csi_driver_irsa.aws_iam_policy.ebs_csi",
            "module.ebs_csi_driver_irsa.aws_iam_role.this",
            "module.ebs_csi_driver_irsa.data.aws_caller_identity.current",
            "module.ebs_csi_driver_irsa.data.aws_iam_policy_document.ebs_csi",
            "module.ebs_csi_driver_irsa.data.aws_iam_policy_document.this",
            "module.ebs_csi_driver_irsa.data.aws_partition.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "954503069243",
            "arn": "arn:aws:iam::954503069243:user/internal-training",
            "id": "954503069243",
            "user_id": "AIDA54PGQ7Y5XQ3D7QQED"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_eks_addon_version",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "aws-ebs-csi-driver",
          "schema_version": 0,
          "attributes": {
            "addon_name": "aws-ebs-csi-driver",
            "id": "aws-ebs-csi-driver",
            "kubernetes_version": "1.29",
            "most_recent": true,
            "version": "v1.31.0-eksbuild.1"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "coredns",
          "schema_version": 0,
          "attributes": {
            "addon_name": "coredns",
            "id": "coredns",
            "kubernetes_version": "1.29",
            "most_recent": true,
            "version": "v1.11.1-eksbuild.9"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "kube-proxy",
          "schema_version": 0,
          "attributes": {
            "addon_name": "kube-proxy",
            "id": "kube-proxy",
            "kubernetes_version": "1.29",
            "most_recent": true,
            "version": "v1.29.3-eksbuild.2"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "vpc-cni",
          "schema_version": 0,
          "attributes": {
            "addon_name": "vpc-cni",
            "id": "vpc-cni",
            "kubernetes_version": "1.29",
            "most_recent": true,
            "version": "v1.18.1-eksbuild.3"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2764486067",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "eks.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSClusterAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_session_context",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::954503069243:user/internal-training",
            "id": "arn:aws:iam::954503069243:user/internal-training",
            "issuer_arn": "arn:aws:iam::954503069243:user/internal-training",
            "issuer_id": "",
            "issuer_name": "",
            "session_name": ""
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "tls_certificate",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "certificates": [
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEdTCCA12gAwIBAgIJAKcOSkw0grd/MA0GCSqGSIb3DQEBCwUAMGgxCzAJBgNV\nBAYTAlVTMSUwIwYDVQQKExxTdGFyZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTIw\nMAYDVQQLEylTdGFyZmllbGQgQ2xhc3MgMiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0\neTAeFw0wOTA5MDIwMDAwMDBaFw0zNDA2MjgxNzM5MTZaMIGYMQswCQYDVQQGEwJV\nUzEQMA4GA1UECBMHQXJpem9uYTETMBEGA1UEBxMKU2NvdHRzZGFsZTElMCMGA1UE\nChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjE7MDkGA1UEAxMyU3RhcmZp\nZWxkIFNlcnZpY2VzIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IC0gRzIwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDVDDrEKvlO4vW+GZdfjohTsR8/\ny8+fIBNtKTrID30892t2OGPZNmCom15cAICyL1l/9of5JUOG52kbUpqQ4XHj2C0N\nTm/2yEnZtvMaVq4rtnQU68/7JuMauh2WLmo7WJSJR1b/JaCTcFOD2oR0FMNnngRo\nOt+OQFodSk7PQ5E751bWAHDLUu57fa4657wx+UX2wmDPE1kCK4DMNEffud6QZW0C\nzyyRpqbn3oUYSXxmTqM6bam17jQuug0DuDPfR+uxa40l2ZvOgdFFRjKWcIfeAg5J\nQ4W2bHO7ZOphQazJ1FTfhy/HIrImzJ9ZVGif/L4qL8RVHHVAYBeFAlU5i38FAgMB\nAAGjgfAwge0wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0O\nBBYEFJxfAN+qAdcwKziIorhtSpzyEZGDMB8GA1UdIwQYMBaAFL9ft9HO3R+G9FtV\nrNzXEMIOqYjnME8GCCsGAQUFBwEBBEMwQTAcBggrBgEFBQcwAYYQaHR0cDovL28u\nc3MyLnVzLzAhBggrBgEFBQcwAoYVaHR0cDovL3guc3MyLnVzL3guY2VyMCYGA1Ud\nHwQfMB0wG6AZoBeGFWh0dHA6Ly9zLnNzMi51cy9yLmNybDARBgNVHSAECjAIMAYG\nBFUdIAAwDQYJKoZIhvcNAQELBQADggEBACMd44pXyn3pF3lM8R5V/cxTbj5HD9/G\nVfKyBDbtgB9TxF00KGu+x1X8Z+rLP3+QsjPNG1gQggL4+C/1E2DUBc7xgQjB3ad1\nl08YuW3e95ORCLp+QCztweq7dp4zBncdDQh/U90bZKuCJ/Fp1U1ervShw3WnWEQt\n8jxwmKy6abaVd38PMV4s/KCHOkdp8Hlf9BRUpJVeEXgSYCfOn8J3/yNTd126/+pZ\n59vPr5KW7ySaNRB6nJHGDn2Z9j8Z3/VyVOEVqQdZe4O/Ui5GjLIAZHYcSNPYeehu\nVsyuLAOQ1xk4meTKCRlb/weWsKh/NEnfVqn3sF/tM+2MR7cwA130A4w=\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "not_after": "2034-06-28T17:39:16Z",
                "not_before": "2009-09-02T00:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "12037640545166866303",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgITBn+USionzfP6wq4rAfkI7rnExjANBgkqhkiG9w0BAQsF\nADCBmDELMAkGA1UEBhMCVVMxEDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNj\nb3R0c2RhbGUxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4x\nOzA5BgNVBAMTMlN0YXJmaWVsZCBTZXJ2aWNlcyBSb290IENlcnRpZmljYXRlIEF1\ndGhvcml0eSAtIEcyMB4XDTE1MDUyNTEyMDAwMFoXDTM3MTIzMTAxMDAwMFowOTEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\nb3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj\nca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM\n9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw\nIFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6\nVOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L\n93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm\njgSubJrIqg0CAwEAAaOCATEwggEtMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/\nBAQDAgGGMB0GA1UdDgQWBBSEGMyFNOy8DJSULghZnMeyEE4KCDAfBgNVHSMEGDAW\ngBScXwDfqgHXMCs4iKK4bUqc8hGRgzB4BggrBgEFBQcBAQRsMGowLgYIKwYBBQUH\nMAGGImh0dHA6Ly9vY3NwLnJvb3RnMi5hbWF6b250cnVzdC5jb20wOAYIKwYBBQUH\nMAKGLGh0dHA6Ly9jcnQucm9vdGcyLmFtYXpvbnRydXN0LmNvbS9yb290ZzIuY2Vy\nMD0GA1UdHwQ2MDQwMqAwoC6GLGh0dHA6Ly9jcmwucm9vdGcyLmFtYXpvbnRydXN0\nLmNvbS9yb290ZzIuY3JsMBEGA1UdIAQKMAgwBgYEVR0gADANBgkqhkiG9w0BAQsF\nAAOCAQEAYjdCXLwQtT6LLOkMm2xF4gcAevnFWAu5CIw+7bMlPLVvUOTNNWqnkzSW\nMiGpSESrnO09tKpzbeR/FoCJbM8oAxiDR3mjEH4wW6w7sGDgd9QIpuEdfF7Au/ma\neyKdpwAJfqxGF4PcnCZXmTA5YpaP7dreqsXMGz7KQ2hsVxa81Q4gLv7/wmpdLqBK\nbRRYh5TmOTFffHPLkIhqhBGWJ6bt2YFGpn6jcgAKUj6DiAdjd4lpFw85hdKrCEVN\n0FE6/V1dN2RMfjCyVSRCnTawXZwXgWHxyvkQAiSr6w10kY17RSlQOYiypok1JR4U\nakcjMS9cmvqtmg5iUaQqqcT5NJ0hGA==\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "not_after": "2037-12-31T01:00:00Z",
                "not_before": "2015-05-25T12:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "144918191876577076464031512351042010504348870",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEXjCCA0agAwIBAgITB3MSTNQG0mfAmRzdKZqfODF5hTANBgkqhkiG9w0BAQsF\nADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\nb24gUm9vdCBDQSAxMB4XDTIyMDgyMzIyMjYwNFoXDTMwMDgyMzIyMjYwNFowPDEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEcMBoGA1UEAxMTQW1hem9uIFJT\nQSAyMDQ4IE0wMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALd/pVko\n8vuM475Tf45HV3BbCl/B9Jy89G1CRkFjcPY06WA9lS+7dWbUA7GtWUKoksr69hKM\nwcMsNpxlw7b3jeXFgxB09/nmalcAWtnLzF+LaDKEA5DQmvKzuh1nfIfqEiKCQSmX\nXh09Xs+dO7cm5qbaL2hhNJCSAejciwcvOFgFNgEMR42wm6KIFHsQW28jhA+1u/M0\np6fVwReuEgZfLfdx82Px0LJck3lST3EB/JfbdsdOzzzg5YkY1dfuqf8y5fUeZ7Cz\nWXbTjujwX/TovmeWKA36VLCz75azW6tDNuDn66FOpADZZ9omVaF6BqNJiLMVl6P3\n/c0OiUMC6Z5OfKcCAwEAAaOCAVowggFWMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYD\nVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNV\nHQ4EFgQUVdkYX9IczAHhWLS+q9lVQgHXLgIwHwYDVR0jBBgwFoAUhBjMhTTsvAyU\nlC4IWZzHshBOCggwewYIKwYBBQUHAQEEbzBtMC8GCCsGAQUFBzABhiNodHRwOi8v\nb2NzcC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbTA6BggrBgEFBQcwAoYuaHR0cDov\nL2NydC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbS9yb290Y2ExLmNlcjA/BgNVHR8E\nODA2MDSgMqAwhi5odHRwOi8vY3JsLnJvb3RjYTEuYW1hem9udHJ1c3QuY29tL3Jv\nb3RjYTEuY3JsMBMGA1UdIAQMMAowCAYGZ4EMAQIBMA0GCSqGSIb3DQEBCwUAA4IB\nAQAGjeWm2cC+3z2MzSCnte46/7JZvj3iQZDY7EvODNdZF41n71Lrk9kbfNwerK0d\nVNzW36Wefr7j7ZSwBVg50W5ay65jNSN74TTQV1yt4WnSbVvN6KlMs1hiyOZdoHKs\nKDV2UGNxbdoBYCQNa2GYF8FQIWLugNp35aSOpMy6cFlymFQomIrnOQHwK1nvVY4q\nxDSJMU/gNJz17D8ArPN3ngnyZ2TwepJ0uBINz3G5te2rdFUF4i4Y3Bb7FUlHDYm4\nu8aIRGpk2ZpfXmxaoxnbIBZRvGLPSUuPwnwoUOMsJ8jirI5vs2dvchPb7MtI1rle\ni02f2ivH2vxkjDLltSpe2fiC\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "not_after": "2030-08-23T22:26:04Z",
                "not_before": "2022-08-23T22:26:04Z",
                "public_key_algorithm": "RSA",
                "serial_number": "166129356476704345391986644047206454194698629",
                "sha1_fingerprint": "d9fe0a65fa00cabf61f5120d373a8135e1461f15",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Amazon RSA 2048 M03,O=Amazon,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIF7TCCBNWgAwIBAgIQA1SNFWO5W8yYJGAGJt7mOTANBgkqhkiG9w0BAQsFADA8\nMQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRwwGgYDVQQDExNBbWF6b24g\nUlNBIDIwNDggTTAzMB4XDTI0MDMyODAwMDAwMFoXDTI1MDQyNjIzNTk1OVowKzEp\nMCcGA1UEAwwgKi5la3MuZXUtY2VudHJhbC0xLmFtYXpvbmF3cy5jb20wggEiMA0G\nCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCvMgjeWyaWqufTn1LAL7KJRIA8d55b\nVkg39Vd9hl8Xkm7Y2yomN4HVzANJsCehb1wNCOJBOQ6Po5nM0x0AREH6T0Ky9Si4\n/+Bsy05fv0/+mltxbiCzBbhMhoF+8bV4gETWbWdx2jRaZnXfmNfr8JA1kpzagsXX\nK5n5kmT70DTnBdcL3K840A2WSIKqjL0Tq8CLawI+0CrKS8+BL6uTtIUU/aNDWcBh\n25+hb/eqU6ltq+/GTxxOwFaXFiB43ApdlIJrGEvOOiFJnqjSe/z9B14o0gHOI9uI\n2uFCUyyjxXD6Fqb4WW2g1n7A0tgHs3iXUkfhJvp9VQLHjwi3zFToFT2dAgMBAAGj\nggL6MIIC9jAfBgNVHSMEGDAWgBRV2Rhf0hzMAeFYtL6r2VVCAdcuAjAdBgNVHQ4E\nFgQUl49AxXLvDk7YGfsgMl8veMnwmvAwKwYDVR0RBCQwIoIgKi5la3MuZXUtY2Vu\ndHJhbC0xLmFtYXpvbmF3cy5jb20wEwYDVR0gBAwwCjAIBgZngQwBAgEwDgYDVR0P\nAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjA7BgNVHR8E\nNDAyMDCgLqAshipodHRwOi8vY3JsLnIybTAzLmFtYXpvbnRydXN0LmNvbS9yMm0w\nMy5jcmwwdQYIKwYBBQUHAQEEaTBnMC0GCCsGAQUFBzABhiFodHRwOi8vb2NzcC5y\nMm0wMy5hbWF6b250cnVzdC5jb20wNgYIKwYBBQUHMAKGKmh0dHA6Ly9jcnQucjJt\nMDMuYW1hem9udHJ1c3QuY29tL3IybTAzLmNlcjAMBgNVHRMBAf8EAjAAMIIBfwYK\nKwYBBAHWeQIEAgSCAW8EggFrAWkAdwBOdaMnXJoQwzhbbNTfP1LrHfDgjhuNacCx\n+mSxYpo53wAAAY6FnQD7AAAEAwBIMEYCIQDAgRrjRgQDQvQI4ymmqomds4XdFaWT\n+buOhQs5aX5sYgIhAKLiZL0IG8+OVwf54M9c+kjgBsGT0KjqA54NMubynjEbAHYA\nfVkeEuF4KnscYWd8Xv340IdcFKBOlZ65Ay/ZDowuebgAAAGOhZ0AbwAABAMARzBF\nAiArIAW+EniGQTcCq7mj07BtSIUZC6jJVoPzKPApZyt5tQIhAJabM+fw1MsTAx6z\nA4AUUDo+8P6pD9aT6EXMu2NTbUFdAHYA5tIxY0B3jMEQQQbXcbnOwdJA9paEhvu6\nhzId/R43jlAAAAGOhZ0AhQAABAMARzBFAiEA+gzSq672FXIFkKjZPQBnEhqvIFgx\njz+SGfI0ZJ+jr1ICICJGhSrumZPRqxDDhqxQLJg1lAcpSSvk50JDScvTiyQOMA0G\nCSqGSIb3DQEBCwUAA4IBAQAYOfGmMDFOMD24DUstZTmNn0Qg0hP3Z59QENXUNSLH\nwm+9hWrU0o5y4+nBQRJQh/uDJXUrCt3ZSYidXiIE16mTPxQf99LXdQjbdRr/ifjV\nBLuWskuLE67ORD7js3qAUX3NCzgZtUb7KbE8h3KoJehkbLKMh6/ARNfsfN7qo4hc\n+hH6aXShPL45nUneY8a2kEiUnKa2wn1fm4S79HqAAOTfHJC8WE2ydreZHpz0RjB7\n7rdNjibGiAcLk/HRrWIRHunb6rnqsZu3YRuvkejuj3hK7uGcf0ZKf66rpSNDfhVL\n+8DaY1UF51pR8vccpZ5Mi7kelrXZEfeb4GP2twpSYKBq\n-----END CERTIFICATE-----\n",
                "is_ca": false,
                "issuer": "CN=Amazon RSA 2048 M03,O=Amazon,C=US",
                "not_after": "2025-04-26T23:59:59Z",
                "not_before": "2024-03-28T00:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "4426698437880301582979442247351592505",
                "sha1_fingerprint": "e0e26d9ed4d742902002f2debc267811c0f31f1d",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=*.eks.eu-central-1.amazonaws.com",
                "version": 3
              }
            ],
            "content": null,
            "id": "0fec78e2228057fe710f52c784cacb6ef0a852b4",
            "url": "https://oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41",
            "verify_chain": true
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:eu-central-1:954503069243:log-group:/aws/eks/testing-innovation-poc/cluster",
            "id": "/aws/eks/testing-innovation-poc/cluster",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "/aws/eks/testing-innovation-poc/cluster",
            "name_prefix": "",
            "retention_in_days": 90,
            "skip_destroy": false,
            "tags": {
              "Name": "/aws/eks/testing-innovation-poc/cluster"
            },
            "tags_all": {
              "Name": "/aws/eks/testing-innovation-poc/cluster"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_eks_addon",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "aws-ebs-csi-driver",
          "schema_version": 0,
          "attributes": {
            "addon_name": "aws-ebs-csi-driver",
            "addon_version": "v1.31.0-eksbuild.1",
            "arn": "arn:aws:eks:eu-central-1:954503069243:addon/testing-innovation-poc/aws-ebs-csi-driver/14c7d7d1-8e9a-8b11-feed-75b76cd7cc2d",
            "cluster_name": "testing-innovation-poc",
            "configuration_values": "",
            "created_at": "2024-05-25T12:04:13Z",
            "id": "testing-innovation-poc:aws-ebs-csi-driver",
            "modified_at": "2024-05-25T12:05:32Z",
            "preserve": true,
            "resolve_conflicts": null,
            "resolve_conflicts_on_create": "OVERWRITE",
            "resolve_conflicts_on_update": "OVERWRITE",
            "service_account_role_arn": "arn:aws:iam::954503069243:role/testing-innovation-ebs-csi-driver20240525120153009900000015",
            "tags": {},
            "tags_all": {},
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            }
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjI0MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.ebs_csi_driver_irsa.aws_iam_role.this",
            "module.ebs_csi_driver_irsa.data.aws_caller_identity.current",
            "module.ebs_csi_driver_irsa.data.aws_iam_policy_document.this",
            "module.ebs_csi_driver_irsa.data.aws_partition.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.efa",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_ami.eks_default",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_subnets.efa",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": "coredns",
          "schema_version": 0,
          "attributes": {
            "addon_name": "coredns",
            "addon_version": "v1.11.1-eksbuild.9",
            "arn": "arn:aws:eks:eu-central-1:954503069243:addon/testing-innovation-poc/coredns/0ec7d7d1-8e8a-23f2-8386-fe3abae8e35c",
            "cluster_name": "testing-innovation-poc",
            "configuration_values": "",
            "created_at": "2024-05-25T12:04:14Z",
            "id": "testing-innovation-poc:coredns",
            "modified_at": "2024-05-25T12:04:26Z",
            "preserve": true,
            "resolve_conflicts": null,
            "resolve_conflicts_on_create": "OVERWRITE",
            "resolve_conflicts_on_update": "OVERWRITE",
            "service_account_role_arn": "",
            "tags": {},
            "tags_all": {},
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            }
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjI0MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.ebs_csi_driver_irsa.aws_iam_role.this",
            "module.ebs_csi_driver_irsa.data.aws_caller_identity.current",
            "module.ebs_csi_driver_irsa.data.aws_iam_policy_document.this",
            "module.ebs_csi_driver_irsa.data.aws_partition.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.efa",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_ami.eks_default",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_subnets.efa",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": "kube-proxy",
          "schema_version": 0,
          "attributes": {
            "addon_name": "kube-proxy",
            "addon_version": "v1.29.3-eksbuild.2",
            "arn": "arn:aws:eks:eu-central-1:954503069243:addon/testing-innovation-poc/kube-proxy/92c7d7d1-8e8f-32ea-ded5-633ad9cd5c3d",
            "cluster_name": "testing-innovation-poc",
            "configuration_values": "",
            "created_at": "2024-05-25T12:04:13Z",
            "id": "testing-innovation-poc:kube-proxy",
            "modified_at": "2024-05-25T12:04:51Z",
            "preserve": true,
            "resolve_conflicts": null,
            "resolve_conflicts_on_create": "OVERWRITE",
            "resolve_conflicts_on_update": "OVERWRITE",
            "service_account_role_arn": "",
            "tags": {},
            "tags_all": {},
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            }
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjI0MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.ebs_csi_driver_irsa.aws_iam_role.this",
            "module.ebs_csi_driver_irsa.data.aws_caller_identity.current",
            "module.ebs_csi_driver_irsa.data.aws_iam_policy_document.this",
            "module.ebs_csi_driver_irsa.data.aws_partition.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.efa",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_ami.eks_default",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_subnets.efa",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": "vpc-cni",
          "schema_version": 0,
          "attributes": {
            "addon_name": "vpc-cni",
            "addon_version": "v1.18.1-eksbuild.3",
            "arn": "arn:aws:eks:eu-central-1:954503069243:addon/testing-innovation-poc/vpc-cni/34c7d7d1-8e8c-5975-fd9e-75e6430634d6",
            "cluster_name": "testing-innovation-poc",
            "configuration_values": "",
            "created_at": "2024-05-25T12:04:14Z",
            "id": "testing-innovation-poc:vpc-cni",
            "modified_at": "2024-05-25T12:04:52Z",
            "preserve": true,
            "resolve_conflicts": null,
            "resolve_conflicts_on_create": "OVERWRITE",
            "resolve_conflicts_on_update": "OVERWRITE",
            "service_account_role_arn": "",
            "tags": {},
            "tags_all": {},
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            }
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjI0MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.ebs_csi_driver_irsa.aws_iam_role.this",
            "module.ebs_csi_driver_irsa.data.aws_caller_identity.current",
            "module.ebs_csi_driver_irsa.data.aws_iam_policy_document.this",
            "module.ebs_csi_driver_irsa.data.aws_partition.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.efa",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_ami.eks_default",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_subnets.efa",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "access_config": [
              {
                "authentication_mode": "API_AND_CONFIG_MAP",
                "bootstrap_cluster_creator_admin_permissions": false
              }
            ],
            "arn": "arn:aws:eks:eu-central-1:954503069243:cluster/testing-innovation-poc",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJQUsrR0xhSXA4cU13RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBMU1qVXhNVFV5TVRWYUZ3MHpOREExTWpNeE1UVTNNVFZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURRWlAyQ0R3T3hMemJJdU5ZSHdWU3FnMUZVa0h5Vm5YUnZ0OVZTVkVyYk9aM2hGNzBQSDFWSE93UHAKU3o2MmFyakJKeXBZanVWbVI5dXFLQkJLSjFUMDV3MUEvVG1hUmcrNlVLeW1RM052bkVlMGlCNng3Y0RVWHd2SgpHV3ZTVEpwTjRUNmx3bXJsM2p3b0g3Mm9lVjRSMTFqQ2R2bzBLbnkwc2k2OWFPRGJMV0dQOFlLRGlXVG9iMlVOCmF2cnRlVUh2UVFWR2IyV3o0WWl4SngzZnhWajFMVmE2bi9jNEZiZVdSVFgyQWhWRStXK3ZESXFaVVd5ZUduSGkKeksvaEg3Ly9HOEpsYm5paDZrM3c1U2Y3Z0FycmxPTHJBT2tVWVRCL05UTGpUT0lIK3NMR281N1plb21ZRWVyYQpEbHRzYlZBU3Q1K2I3RWhTV0E5NDZrVlVxa2I5QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRL2dsOEdFWWM3Wk01RThFTFd5YWhUV1BiYmREQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQSsvbVVkUThxZwo3d01XYjFwNXQ4ZlZZeHUxaHJsak9KTldzaXNhUEQxb3BrNzlvUGtFY3I3czVLL1dOUldMUkhGdkJ4QkowQTAzCnVuLzhPOFZORElxY3oyK3JGOWZPOTVmc1ZwUGgycllJYlBUZ3F6TmN2SC94Y0h2cFgrUFp6c1BNQnc4cEU1eWYKNWZjalZ6R21SWXZKQmQyRHBIUHNLcmxhdWtXK0NiaDJsZ09OaktUNVdHcENzbXNjU0piTFR3OXduR3c1NGNZMgpFV21rMGlmWitWT2FpSlRsbEZEamVObHpkL0hTUndiY2tYTHRiRjY3R0ZlT0JETjZKVUhjZEVrb2N5bnBHdUZZCnQwMjNFZ2ZSV0g0TTVjRXExRTdSdjljelVZTzRZeTllR3phSXljNGNvd0V0MStSOXpQZ05zT2NDOGc5ZjV2U0oKbjEzcU1QWSs3eXk3Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "cluster_id": null,
            "created_at": "2024-05-25 11:52:44.048 +0000 UTC",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator"
            ],
            "encryption_config": [
              {
                "provider": [
                  {
                    "key_arn": "arn:aws:kms:eu-central-1:954503069243:key/86211da9-24b8-498c-8ffa-4191c5791f16"
                  }
                ],
                "resources": [
                  "secrets"
                ]
              }
            ],
            "endpoint": "https://FD27A287D4407698E396C00358033F41.gr7.eu-central-1.eks.amazonaws.com",
            "id": "testing-innovation-poc",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "testing-innovation-poc",
            "outpost_config": [],
            "platform_version": "eks.7",
            "role_arn": "arn:aws:iam::954503069243:role/testing-innovation-poc-cluster-20240525115217397100000004",
            "status": "ACTIVE",
            "tags": {
              "terraform-aws-modules": "eks"
            },
            "tags_all": {
              "terraform-aws-modules": "eks"
            },
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "version": "1.29",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-03237b94d25e53ab7",
                "endpoint_private_access": true,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-00b76713c6264c798"
                ],
                "subnet_ids": [
                  "subnet-05823175ac7f7bab9",
                  "subnet-0a4388bebdd437942"
                ],
                "vpc_id": "vpc-02cf70e1064776ace"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_openid_connect_provider",
      "name": "oidc_provider",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::954503069243:oidc-provider/oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41",
            "client_id_list": [
              "sts.amazonaws.com"
            ],
            "id": "arn:aws:iam::954503069243:oidc-provider/oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41",
            "tags": {
              "Name": "testing-innovation-poc-eks-irsa"
            },
            "tags_all": {
              "Name": "testing-innovation-poc-eks-irsa"
            },
            "thumbprint_list": [
              "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
            ],
            "url": "oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::954503069243:policy/testing-innovation-poc-cluster-ClusterEncryption20240525115240747500000013",
            "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
            "id": "arn:aws:iam::954503069243:policy/testing-innovation-poc-cluster-ClusterEncryption20240525115240747500000013",
            "name": "testing-innovation-poc-cluster-ClusterEncryption20240525115240747500000013",
            "name_prefix": "testing-innovation-poc-cluster-ClusterEncryption",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:eu-central-1:954503069243:key/86211da9-24b8-498c-8ffa-4191c5791f16\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA54PGQ7Y5TSQSAOW7A",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::954503069243:role/testing-innovation-poc-cluster-20240525115217397100000004",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-05-25T11:52:17Z",
            "description": "",
            "force_detach_policies": true,
            "id": "testing-innovation-poc-cluster-20240525115217397100000004",
            "inline_policy": [
              {
                "name": "testing-innovation-poc-cluster",
                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"*\"}]}"
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::954503069243:policy/testing-innovation-poc-cluster-ClusterEncryption20240525115240747500000013",
              "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
              "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
            ],
            "max_session_duration": 3600,
            "name": "testing-innovation-poc-cluster-20240525115217397100000004",
            "name_prefix": "testing-innovation-poc-cluster-",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROA54PGQ7Y5QUPPM5255"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.data.aws_iam_policy_document.assume_role_policy"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "testing-innovation-poc-cluster-20240525115217397100000004-20240525115241079900000014",
            "policy_arn": "arn:aws:iam::954503069243:policy/testing-innovation-poc-cluster-ClusterEncryption20240525115240747500000013",
            "role": "testing-innovation-poc-cluster-20240525115217397100000004"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "AmazonEKSClusterPolicy",
          "schema_version": 0,
          "attributes": {
            "id": "testing-innovation-poc-cluster-20240525115217397100000004-20240525115218066700000005",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "role": "testing-innovation-poc-cluster-20240525115217397100000004"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKSVPCResourceController",
          "schema_version": 0,
          "attributes": {
            "id": "testing-innovation-poc-cluster-20240525115217397100000004-20240525115218073300000006",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
            "role": "testing-innovation-poc-cluster-20240525115217397100000004"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:954503069243:security-group/sg-00b76713c6264c798",
            "description": "EKS cluster security group",
            "egress": [],
            "id": "sg-00b76713c6264c798",
            "ingress": [
              {
                "cidr_blocks": [
                  "10.107.160.0/24"
                ],
                "description": "within_vpc",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              },
              {
                "cidr_blocks": [],
                "description": "Node groups to cluster API",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0531618b2161a5e4e"
                ],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [],
                "description": "Nodes on ephemeral ports",
                "from_port": 1025,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0531618b2161a5e4e"
                ],
                "self": false,
                "to_port": 65535
              }
            ],
            "name": "testing-innovation-poc-cluster-20240525115230177300000009",
            "name_prefix": "testing-innovation-poc-cluster-",
            "owner_id": "954503069243",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "testing-innovation-poc-cluster"
            },
            "tags_all": {
              "Name": "testing-innovation-poc-cluster"
            },
            "timeouts": null,
            "vpc_id": "vpc-02cf70e1064776ace"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:954503069243:security-group/sg-0531618b2161a5e4e",
            "description": "EKS node shared security group",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow all egress",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0531618b2161a5e4e",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "Cluster API to Nodegroup all traffic",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [
                  "sg-00b76713c6264c798"
                ],
                "self": false,
                "to_port": 0
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 4443/tcp webhook",
                "from_port": 4443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-00b76713c6264c798"
                ],
                "self": false,
                "to_port": 4443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 6443/tcp webhook",
                "from_port": 6443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-00b76713c6264c798"
                ],
                "self": false,
                "to_port": 6443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 8443/tcp webhook",
                "from_port": 8443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-00b76713c6264c798"
                ],
                "self": false,
                "to_port": 8443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 9443/tcp webhook",
                "from_port": 9443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-00b76713c6264c798"
                ],
                "self": false,
                "to_port": 9443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node groups",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-00b76713c6264c798"
                ],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node kubelets",
                "from_port": 10250,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-00b76713c6264c798"
                ],
                "self": false,
                "to_port": 10250
              },
              {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS UDP",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": true,
                "to_port": 53
              },
              {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": true,
                "to_port": 53
              },
              {
                "cidr_blocks": [],
                "description": "Node to node all ports/protocols",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": true,
                "to_port": 0
              },
              {
                "cidr_blocks": [],
                "description": "Node to node ingress on ephemeral ports",
                "from_port": 1025,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": true,
                "to_port": 65535
              }
            ],
            "name": "testing-innovation-poc-node-2024052511523020840000000b",
            "name_prefix": "testing-innovation-poc-node-",
            "owner_id": "954503069243",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "testing-innovation-poc-node",
              "kubernetes.io/cluster/testing-innovation-poc": "owned"
            },
            "tags_all": {
              "Name": "testing-innovation-poc-node",
              "kubernetes.io/cluster/testing-innovation-poc": "owned"
            },
            "timeouts": null,
            "vpc_id": "vpc-02cf70e1064776ace"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "ingress_nodes_443",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node groups to cluster API",
            "from_port": 443,
            "id": "sgrule-969880062",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-00b76713c6264c798",
            "security_group_rule_id": "sgr-013775f6465246d1f",
            "self": false,
            "source_security_group_id": "sg-0531618b2161a5e4e",
            "timeouts": null,
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_nodes_ephemeral_ports_tcp",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Nodes on ephemeral ports",
            "from_port": 1025,
            "id": "sgrule-809633100",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-00b76713c6264c798",
            "security_group_rule_id": "sgr-00749b8c21d7a656b",
            "self": false,
            "source_security_group_id": "sg-0531618b2161a5e4e",
            "timeouts": null,
            "to_port": 65535,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "within_vpc",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "10.107.160.0/24"
            ],
            "description": "within_vpc",
            "from_port": 0,
            "id": "sgrule-60225084",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "-1",
            "security_group_id": "sg-00b76713c6264c798",
            "security_group_rule_id": "sgr-036630dc646ab74a7",
            "self": false,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 0,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "egress_all",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow all egress",
            "from_port": 0,
            "id": "sgrule-3850736852",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_group_id": "sg-0531618b2161a5e4e",
            "security_group_rule_id": "sgr-037fd1ce1eead0141",
            "self": false,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 0,
            "type": "egress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_443",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node groups",
            "from_port": 443,
            "id": "sgrule-3342865249",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0531618b2161a5e4e",
            "security_group_rule_id": "sgr-0afa933229a4dd9cc",
            "self": false,
            "source_security_group_id": "sg-00b76713c6264c798",
            "timeouts": null,
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_4443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 4443/tcp webhook",
            "from_port": 4443,
            "id": "sgrule-3067104042",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0531618b2161a5e4e",
            "security_group_rule_id": "sgr-0afe5cfcb64e912a8",
            "self": false,
            "source_security_group_id": "sg-00b76713c6264c798",
            "timeouts": null,
            "to_port": 4443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_6443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 6443/tcp webhook",
            "from_port": 6443,
            "id": "sgrule-2140286140",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0531618b2161a5e4e",
            "security_group_rule_id": "sgr-099bca9b1989d372f",
            "self": false,
            "source_security_group_id": "sg-00b76713c6264c798",
            "timeouts": null,
            "to_port": 6443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_8443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 8443/tcp webhook",
            "from_port": 8443,
            "id": "sgrule-1825443997",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0531618b2161a5e4e",
            "security_group_rule_id": "sgr-074c8504f3ba4d39b",
            "self": false,
            "source_security_group_id": "sg-00b76713c6264c798",
            "timeouts": null,
            "to_port": 8443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_9443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 9443/tcp webhook",
            "from_port": 9443,
            "id": "sgrule-141501270",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0531618b2161a5e4e",
            "security_group_rule_id": "sgr-0c89989c56b0d4aed",
            "self": false,
            "source_security_group_id": "sg-00b76713c6264c798",
            "timeouts": null,
            "to_port": 9443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_kubelet",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node kubelets",
            "from_port": 10250,
            "id": "sgrule-2072748604",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0531618b2161a5e4e",
            "security_group_rule_id": "sgr-084251e163d9e793f",
            "self": false,
            "source_security_group_id": "sg-00b76713c6264c798",
            "timeouts": null,
            "to_port": 10250,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_to_node_all_traffic",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to Nodegroup all traffic",
            "from_port": 0,
            "id": "sgrule-1762123896",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_group_id": "sg-0531618b2161a5e4e",
            "security_group_rule_id": "sgr-09677b9d7969056cb",
            "self": false,
            "source_security_group_id": "sg-00b76713c6264c798",
            "timeouts": null,
            "to_port": 0,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_nodes_ephemeral",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node ingress on ephemeral ports",
            "from_port": 1025,
            "id": "sgrule-2227757388",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0531618b2161a5e4e",
            "security_group_rule_id": "sgr-06e8547c62ad6ce60",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 65535,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_self_all",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node all ports/protocols",
            "from_port": 0,
            "id": "sgrule-3094748523",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_group_id": "sg-0531618b2161a5e4e",
            "security_group_rule_id": "sgr-08b2d79ca3ba56af1",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 0,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_self_coredns_tcp",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node CoreDNS",
            "from_port": 53,
            "id": "sgrule-3864560013",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0531618b2161a5e4e",
            "security_group_rule_id": "sgr-09363ee39a835e781",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 53,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_self_coredns_udp",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node CoreDNS UDP",
            "from_port": 53,
            "id": "sgrule-1107763810",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "udp",
            "security_group_id": "sg-0531618b2161a5e4e",
            "security_group_rule_id": "sgr-0b17301d71dc79975",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 53,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "time_sleep",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/time\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "create_duration": "30s",
            "destroy_duration": null,
            "id": "2024-05-25T12:02:22Z",
            "triggers": {
              "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJQUsrR0xhSXA4cU13RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBMU1qVXhNVFV5TVRWYUZ3MHpOREExTWpNeE1UVTNNVFZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURRWlAyQ0R3T3hMemJJdU5ZSHdWU3FnMUZVa0h5Vm5YUnZ0OVZTVkVyYk9aM2hGNzBQSDFWSE93UHAKU3o2MmFyakJKeXBZanVWbVI5dXFLQkJLSjFUMDV3MUEvVG1hUmcrNlVLeW1RM052bkVlMGlCNng3Y0RVWHd2SgpHV3ZTVEpwTjRUNmx3bXJsM2p3b0g3Mm9lVjRSMTFqQ2R2bzBLbnkwc2k2OWFPRGJMV0dQOFlLRGlXVG9iMlVOCmF2cnRlVUh2UVFWR2IyV3o0WWl4SngzZnhWajFMVmE2bi9jNEZiZVdSVFgyQWhWRStXK3ZESXFaVVd5ZUduSGkKeksvaEg3Ly9HOEpsYm5paDZrM3c1U2Y3Z0FycmxPTHJBT2tVWVRCL05UTGpUT0lIK3NMR281N1plb21ZRWVyYQpEbHRzYlZBU3Q1K2I3RWhTV0E5NDZrVlVxa2I5QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRL2dsOEdFWWM3Wk01RThFTFd5YWhUV1BiYmREQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQSsvbVVkUThxZwo3d01XYjFwNXQ4ZlZZeHUxaHJsak9KTldzaXNhUEQxb3BrNzlvUGtFY3I3czVLL1dOUldMUkhGdkJ4QkowQTAzCnVuLzhPOFZORElxY3oyK3JGOWZPOTVmc1ZwUGgycllJYlBUZ3F6TmN2SC94Y0h2cFgrUFp6c1BNQnc4cEU1eWYKNWZjalZ6R21SWXZKQmQyRHBIUHNLcmxhdWtXK0NiaDJsZ09OaktUNVdHcENzbXNjU0piTFR3OXduR3c1NGNZMgpFV21rMGlmWitWT2FpSlRsbEZEamVObHpkL0hTUndiY2tYTHRiRjY3R0ZlT0JETjZKVUhjZEVrb2N5bnBHdUZZCnQwMjNFZ2ZSV0g0TTVjRXExRTdSdjljelVZTzRZeTllR3phSXljNGNvd0V0MStSOXpQZ05zT2NDOGc5ZjV2U0oKbjEzcU1QWSs3eXk3Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
              "cluster_endpoint": "https://FD27A287D4407698E396C00358033F41.gr7.eu-central-1.eks.amazonaws.com",
              "cluster_name": "testing-innovation-poc",
              "cluster_service_cidr": "172.20.0.0/16",
              "cluster_version": "1.29"
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"core_node_group\"]",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "954503069243",
            "arn": "arn:aws:iam::954503069243:user/internal-training",
            "id": "954503069243",
            "user_id": "AIDA54PGQ7Y5XQ3D7QQED"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"core_node_group\"]",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2560088296",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSNodeAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "ec2.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSNodeAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"core_node_group\"]",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"core_node_group\"]",
      "mode": "managed",
      "type": "aws_eks_node_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "ami_type": "AL2_x86_64",
            "arn": "arn:aws:eks:eu-central-1:954503069243:nodegroup/testing-innovation-poc/core-node-group-2024052512022363810000001b/c8c7d7d0-b7b7-7302-17f7-d63535a70ee0",
            "capacity_type": "ON_DEMAND",
            "cluster_name": "testing-innovation-poc",
            "disk_size": 0,
            "force_update_version": null,
            "id": "testing-innovation-poc:core-node-group-2024052512022363810000001b",
            "instance_types": [
              "t3.xlarge"
            ],
            "labels": {
              "NodeGroupType": "core",
              "WorkerType": "ON_DEMAND"
            },
            "launch_template": [
              {
                "id": "lt-0ef82e21d0223d207",
                "name": "core_node_group-20240525120222664500000017",
                "version": "1"
              }
            ],
            "node_group_name": "core-node-group-2024052512022363810000001b",
            "node_group_name_prefix": "core-node-group-",
            "node_role_arn": "arn:aws:iam::954503069243:role/core-node-group-eks-node-group-2024052511523295230000000d",
            "release_version": "1.29.3-20240514",
            "remote_access": [],
            "resources": [
              {
                "autoscaling_groups": [
                  {
                    "name": "eks-core-node-group-2024052512022363810000001b-c8c7d7d0-b7b7-7302-17f7-d63535a70ee0"
                  }
                ],
                "remote_access_security_group_id": ""
              }
            ],
            "scaling_config": [
              {
                "desired_size": 2,
                "max_size": 4,
                "min_size": 2
              }
            ],
            "status": "ACTIVE",
            "subnet_ids": [
              "subnet-05823175ac7f7bab9",
              "subnet-0a4388bebdd437942"
            ],
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "core-node-group",
              "TeamName": "RnD"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "core-node-group",
              "TeamName": "RnD"
            },
            "taint": [],
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "update_config": [
              {
                "max_unavailable": 0,
                "max_unavailable_percentage": 33
              }
            ],
            "version": "1.29"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.efa",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"core_node_group\"]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::954503069243:role/core-node-group-eks-node-group-2024052511523295230000000d",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-05-25T11:52:33Z",
            "description": "EKS managed node group IAM role",
            "force_detach_policies": true,
            "id": "core-node-group-eks-node-group-2024052511523295230000000d",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
              "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
              "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
            ],
            "max_session_duration": 3600,
            "name": "core-node-group-eks-node-group-2024052511523295230000000d",
            "name_prefix": "core-node-group-eks-node-group-",
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "core-node-grp",
              "TeamName": "RnD"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "core-node-grp",
              "TeamName": "RnD"
            },
            "unique_id": "AROA54PGQ7Y5T4OZ7EPTF"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"core_node_group\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "additional",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "AmazonSSMManagedInstanceCore",
          "schema_version": 0,
          "attributes": {
            "id": "core-node-group-eks-node-group-2024052511523295230000000d-20240525115237740500000011",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
            "role": "core-node-group-eks-node-group-2024052511523295230000000d"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"core_node_group\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "AmazonEC2ContainerRegistryReadOnly",
          "schema_version": 0,
          "attributes": {
            "id": "core-node-group-eks-node-group-2024052511523295230000000d-2024052511523755220000000e",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "role": "core-node-group-eks-node-group-2024052511523295230000000d"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKSWorkerNodePolicy",
          "schema_version": 0,
          "attributes": {
            "id": "core-node-group-eks-node-group-2024052511523295230000000d-2024052511523756100000000f",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "role": "core-node-group-eks-node-group-2024052511523295230000000d"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKS_CNI_Policy",
          "schema_version": 0,
          "attributes": {
            "id": "core-node-group-eks-node-group-2024052511523295230000000d-20240525115237739300000010",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
            "role": "core-node-group-eks-node-group-2024052511523295230000000d"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"core_node_group\"]",
      "mode": "managed",
      "type": "aws_launch_template",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:954503069243:launch-template/lt-0ef82e21d0223d207",
            "block_device_mappings": [
              {
                "device_name": "/dev/xvda",
                "ebs": [
                  {
                    "delete_on_termination": "",
                    "encrypted": "",
                    "iops": 0,
                    "kms_key_id": "",
                    "snapshot_id": "",
                    "throughput": 0,
                    "volume_size": 100,
                    "volume_type": "gp3"
                  }
                ],
                "no_device": "",
                "virtual_name": ""
              }
            ],
            "capacity_reservation_specification": [],
            "cpu_options": [],
            "credit_specification": [],
            "default_version": 1,
            "description": "Custom launch template for core-node-group EKS managed node group",
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_optimized": "true",
            "elastic_gpu_specifications": [],
            "elastic_inference_accelerator": [],
            "enclave_options": [],
            "hibernation_options": [],
            "iam_instance_profile": [],
            "id": "lt-0ef82e21d0223d207",
            "image_id": "",
            "instance_initiated_shutdown_behavior": "",
            "instance_market_options": [],
            "instance_requirements": [],
            "instance_type": "",
            "kernel_id": "",
            "key_name": "",
            "latest_version": 1,
            "license_specification": [],
            "maintenance_options": [],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "",
                "http_put_response_hop_limit": 2,
                "http_tokens": "required",
                "instance_metadata_tags": ""
              }
            ],
            "monitoring": [
              {
                "enabled": true
              }
            ],
            "name": "core_node_group-20240525120222664500000017",
            "name_prefix": "core_node_group-",
            "network_interfaces": [],
            "placement": [],
            "private_dns_name_options": [],
            "ram_disk_id": "",
            "security_group_names": [],
            "tag_specifications": [
              {
                "resource_type": "instance",
                "tags": {
                  "Businessunit": "testing",
                  "Environment": "poc",
                  "Managedby": "Terraform",
                  "Name": "core-node-group",
                  "TeamName": "RnD"
                }
              },
              {
                "resource_type": "network-interface",
                "tags": {
                  "Businessunit": "testing",
                  "Environment": "poc",
                  "Managedby": "Terraform",
                  "Name": "core-node-group",
                  "TeamName": "RnD"
                }
              },
              {
                "resource_type": "volume",
                "tags": {
                  "Businessunit": "testing",
                  "Environment": "poc",
                  "Managedby": "Terraform",
                  "Name": "core-node-group",
                  "TeamName": "RnD"
                }
              }
            ],
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "core-node-grp",
              "TeamName": "RnD"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "core-node-grp",
              "TeamName": "RnD"
            },
            "update_default_version": true,
            "user_data": "",
            "vpc_security_group_ids": [
              "sg-0531618b2161a5e4e"
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"core_node_group\"].module.user_data",
      "mode": "managed",
      "type": "null_resource",
      "name": "validate_cluster_service_cidr",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "847861298405105801",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "account_id": "954503069243",
            "arn": "arn:aws:iam::954503069243:user/internal-training",
            "id": "954503069243",
            "user_id": "AIDA54PGQ7Y5XQ3D7QQED"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2482244236",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"Default\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"kms:*\",\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::954503069243:root\"\n      }\n    },\n    {\n      \"Sid\": \"KeyAdministration\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:Update*\",\n        \"kms:UntagResource\",\n        \"kms:TagResource\",\n        \"kms:ScheduleKeyDeletion\",\n        \"kms:Revoke*\",\n        \"kms:ReplicateKey\",\n        \"kms:Put*\",\n        \"kms:List*\",\n        \"kms:ImportKeyMaterial\",\n        \"kms:Get*\",\n        \"kms:Enable*\",\n        \"kms:Disable*\",\n        \"kms:Describe*\",\n        \"kms:Delete*\",\n        \"kms:Create*\",\n        \"kms:CancelKeyDeletion\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::954503069243:user/internal-training\"\n      }\n    },\n    {\n      \"Sid\": \"KeyUsage\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:ReEncrypt*\",\n        \"kms:GenerateDataKey*\",\n        \"kms:Encrypt\",\n        \"kms:DescribeKey\",\n        \"kms:Decrypt\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::954503069243:role/testing-innovation-poc-cluster-20240525115217397100000004\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "kms:*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::954503069243:root"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "Default"
              },
              {
                "actions": [
                  "kms:CancelKeyDeletion",
                  "kms:Create*",
                  "kms:Delete*",
                  "kms:Describe*",
                  "kms:Disable*",
                  "kms:Enable*",
                  "kms:Get*",
                  "kms:ImportKeyMaterial",
                  "kms:List*",
                  "kms:Put*",
                  "kms:ReplicateKey",
                  "kms:Revoke*",
                  "kms:ScheduleKeyDeletion",
                  "kms:TagResource",
                  "kms:UntagResource",
                  "kms:Update*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::954503069243:user/internal-training"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "KeyAdministration"
              },
              {
                "actions": [
                  "kms:Decrypt",
                  "kms:DescribeKey",
                  "kms:Encrypt",
                  "kms:GenerateDataKey*",
                  "kms:ReEncrypt*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::954503069243:role/testing-innovation-poc-cluster-20240525115217397100000004"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "KeyUsage"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_alias",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "cluster",
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:eu-central-1:954503069243:alias/eks/testing-innovation-poc",
            "id": "alias/eks/testing-innovation-poc",
            "name": "alias/eks/testing-innovation-poc",
            "name_prefix": "",
            "target_key_arn": "arn:aws:kms:eu-central-1:954503069243:key/86211da9-24b8-498c-8ffa-4191c5791f16",
            "target_key_id": "86211da9-24b8-498c-8ffa-4191c5791f16"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_key",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:eu-central-1:954503069243:key/86211da9-24b8-498c-8ffa-4191c5791f16",
            "bypass_policy_lockout_safety_check": false,
            "custom_key_store_id": "",
            "customer_master_key_spec": "SYMMETRIC_DEFAULT",
            "deletion_window_in_days": null,
            "description": "testing-innovation-poc cluster encryption key",
            "enable_key_rotation": true,
            "id": "86211da9-24b8-498c-8ffa-4191c5791f16",
            "is_enabled": true,
            "key_id": "86211da9-24b8-498c-8ffa-4191c5791f16",
            "key_usage": "ENCRYPT_DECRYPT",
            "multi_region": false,
            "policy": "{\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::954503069243:root\"},\"Resource\":\"*\",\"Sid\":\"Default\"},{\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:ReplicateKey\",\"kms:Put*\",\"kms:List*\",\"kms:ImportKeyMaterial\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::954503069243:user/internal-training\"},\"Resource\":\"*\",\"Sid\":\"KeyAdministration\"},{\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::954503069243:role/testing-innovation-poc-cluster-20240525115217397100000004\"},\"Resource\":\"*\",\"Sid\":\"KeyUsage\"}],\"Version\":\"2012-10-17\"}",
            "tags": {
              "terraform-aws-modules": "eks"
            },
            "tags_all": {
              "terraform-aws-modules": "eks"
            },
            "timeouts": null,
            "xks_key_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks_blueprints_addons",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "954503069243",
            "arn": "arn:aws:iam::954503069243:user/internal-training",
            "id": "954503069243",
            "user_id": "AIDA54PGQ7Y5XQ3D7QQED"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_blueprints_addons",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "aws_load_balancer_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3712473960",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:CreateServiceLinkedRole\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"iam:AWSServiceName\": \"elasticloadbalancing.amazonaws.com\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:DescribeTrustStores\",\n        \"elasticloadbalancing:DescribeTargetHealth\",\n        \"elasticloadbalancing:DescribeTargetGroups\",\n        \"elasticloadbalancing:DescribeTargetGroupAttributes\",\n        \"elasticloadbalancing:DescribeTags\",\n        \"elasticloadbalancing:DescribeSSLPolicies\",\n        \"elasticloadbalancing:DescribeRules\",\n        \"elasticloadbalancing:DescribeLoadBalancers\",\n        \"elasticloadbalancing:DescribeLoadBalancerAttributes\",\n        \"elasticloadbalancing:DescribeListeners\",\n        \"elasticloadbalancing:DescribeListenerCertificates\",\n        \"ec2:GetCoipPoolUsage\",\n        \"ec2:DescribeVpcs\",\n        \"ec2:DescribeVpcPeeringConnections\",\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeSubnets\",\n        \"ec2:DescribeSecurityGroups\",\n        \"ec2:DescribeNetworkInterfaces\",\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeInstances\",\n        \"ec2:DescribeCoipPools\",\n        \"ec2:DescribeAvailabilityZones\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"wafv2:GetWebACLForResource\",\n        \"wafv2:GetWebACL\",\n        \"wafv2:DisassociateWebACL\",\n        \"wafv2:AssociateWebACL\",\n        \"waf-regional:GetWebACLForResource\",\n        \"waf-regional:GetWebACL\",\n        \"waf-regional:DisassociateWebACL\",\n        \"waf-regional:AssociateWebACL\",\n        \"shield:GetSubscriptionState\",\n        \"shield:DescribeProtection\",\n        \"shield:DeleteProtection\",\n        \"shield:CreateProtection\",\n        \"iam:ListServerCertificates\",\n        \"iam:GetServerCertificate\",\n        \"cognito-idp:DescribeUserPoolClient\",\n        \"acm:ListCertificates\",\n        \"acm:DescribeCertificate\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:RevokeSecurityGroupIngress\",\n        \"ec2:AuthorizeSecurityGroupIngress\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateSecurityGroup\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateTags\",\n      \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        },\n        \"StringEquals\": {\n          \"ec2:CreateAction\": \"CreateSecurityGroup\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteTags\",\n        \"ec2:CreateTags\"\n      ],\n      \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:RevokeSecurityGroupIngress\",\n        \"ec2:DeleteSecurityGroup\",\n        \"ec2:AuthorizeSecurityGroupIngress\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:CreateTargetGroup\",\n        \"elasticloadbalancing:CreateLoadBalancer\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:DeleteRule\",\n        \"elasticloadbalancing:DeleteListener\",\n        \"elasticloadbalancing:CreateRule\",\n        \"elasticloadbalancing:CreateListener\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RemoveTags\",\n        \"elasticloadbalancing:AddTags\"\n      ],\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n      ],\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RemoveTags\",\n        \"elasticloadbalancing:AddTags\"\n      ],\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:SetSubnets\",\n        \"elasticloadbalancing:SetSecurityGroups\",\n        \"elasticloadbalancing:SetIpAddressType\",\n        \"elasticloadbalancing:ModifyTargetGroupAttributes\",\n        \"elasticloadbalancing:ModifyTargetGroup\",\n        \"elasticloadbalancing:ModifyLoadBalancerAttributes\",\n        \"elasticloadbalancing:DeleteTargetGroup\",\n        \"elasticloadbalancing:DeleteLoadBalancer\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"elasticloadbalancing:AddTags\",\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n      ],\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        },\n        \"StringEquals\": {\n          \"elasticloadbalancing:CreateAction\": [\n            \"CreateTargetGroup\",\n            \"CreateLoadBalancer\"\n          ]\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RegisterTargets\",\n        \"elasticloadbalancing:DeregisterTargets\"\n      ],\n      \"Resource\": \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:SetWebAcl\",\n        \"elasticloadbalancing:RemoveListenerCertificates\",\n        \"elasticloadbalancing:ModifyRule\",\n        \"elasticloadbalancing:ModifyListener\",\n        \"elasticloadbalancing:AddListenerCertificates\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "iam:CreateServiceLinkedRole"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "elasticloadbalancing.amazonaws.com"
                    ],
                    "variable": "iam:AWSServiceName"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DescribeAccountAttributes",
                  "ec2:DescribeAddresses",
                  "ec2:DescribeAvailabilityZones",
                  "ec2:DescribeCoipPools",
                  "ec2:DescribeInstances",
                  "ec2:DescribeInternetGateways",
                  "ec2:DescribeNetworkInterfaces",
                  "ec2:DescribeSecurityGroups",
                  "ec2:DescribeSubnets",
                  "ec2:DescribeTags",
                  "ec2:DescribeVpcPeeringConnections",
                  "ec2:DescribeVpcs",
                  "ec2:GetCoipPoolUsage",
                  "elasticloadbalancing:DescribeListenerCertificates",
                  "elasticloadbalancing:DescribeListeners",
                  "elasticloadbalancing:DescribeLoadBalancerAttributes",
                  "elasticloadbalancing:DescribeLoadBalancers",
                  "elasticloadbalancing:DescribeRules",
                  "elasticloadbalancing:DescribeSSLPolicies",
                  "elasticloadbalancing:DescribeTags",
                  "elasticloadbalancing:DescribeTargetGroupAttributes",
                  "elasticloadbalancing:DescribeTargetGroups",
                  "elasticloadbalancing:DescribeTargetHealth",
                  "elasticloadbalancing:DescribeTrustStores"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "acm:DescribeCertificate",
                  "acm:ListCertificates",
                  "cognito-idp:DescribeUserPoolClient",
                  "iam:GetServerCertificate",
                  "iam:ListServerCertificates",
                  "shield:CreateProtection",
                  "shield:DeleteProtection",
                  "shield:DescribeProtection",
                  "shield:GetSubscriptionState",
                  "waf-regional:AssociateWebACL",
                  "waf-regional:DisassociateWebACL",
                  "waf-regional:GetWebACL",
                  "waf-regional:GetWebACLForResource",
                  "wafv2:AssociateWebACL",
                  "wafv2:DisassociateWebACL",
                  "wafv2:GetWebACL",
                  "wafv2:GetWebACLForResource"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:RevokeSecurityGroupIngress"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateSecurityGroup"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "CreateSecurityGroup"
                    ],
                    "variable": "ec2:CreateAction"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:security-group/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateTags",
                  "ec2:DeleteTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "Null",
                    "values": [
                      "true"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:security-group/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:DeleteSecurityGroup",
                  "ec2:RevokeSecurityGroupIngress"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:CreateLoadBalancer",
                  "elasticloadbalancing:CreateTargetGroup"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:CreateListener",
                  "elasticloadbalancing:CreateRule",
                  "elasticloadbalancing:DeleteListener",
                  "elasticloadbalancing:DeleteRule"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags",
                  "elasticloadbalancing:RemoveTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "Null",
                    "values": [
                      "true"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                  "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags",
                  "elasticloadbalancing:RemoveTags"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*",
                  "arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*",
                  "arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*",
                  "arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:DeleteLoadBalancer",
                  "elasticloadbalancing:DeleteTargetGroup",
                  "elasticloadbalancing:ModifyLoadBalancerAttributes",
                  "elasticloadbalancing:ModifyTargetGroup",
                  "elasticloadbalancing:ModifyTargetGroupAttributes",
                  "elasticloadbalancing:SetIpAddressType",
                  "elasticloadbalancing:SetSecurityGroups",
                  "elasticloadbalancing:SetSubnets"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "CreateTargetGroup",
                      "CreateLoadBalancer"
                    ],
                    "variable": "elasticloadbalancing:CreateAction"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                  "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:DeregisterTargets",
                  "elasticloadbalancing:RegisterTargets"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddListenerCertificates",
                  "elasticloadbalancing:ModifyListener",
                  "elasticloadbalancing:ModifyRule",
                  "elasticloadbalancing:RemoveListenerCertificates",
                  "elasticloadbalancing:SetWebAcl"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_blueprints_addons",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_blueprints_addons",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "Europe (Frankfurt)",
            "endpoint": "ec2.eu-central-1.amazonaws.com",
            "id": "eu-central-1",
            "name": "eu-central-1"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_blueprints_addons",
      "mode": "managed",
      "type": "time_sleep",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/time\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "create_duration": "30s",
            "destroy_duration": null,
            "id": "2024-05-25T12:02:22Z",
            "triggers": {
              "cluster_endpoint": "https://FD27A287D4407698E396C00358033F41.gr7.eu-central-1.eks.amazonaws.com",
              "cluster_name": "testing-innovation-poc",
              "custom": "",
              "oidc_provider_arn": "arn:aws:iam::954503069243:oidc-provider/oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41"
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks_blueprints_addons.module.aws_load_balancer_controller",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "account_id": "954503069243",
            "arn": "arn:aws:iam::954503069243:user/internal-training",
            "id": "954503069243",
            "user_id": "AIDA54PGQ7Y5XQ3D7QQED"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_blueprints_addons.module.aws_load_balancer_controller",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3376648691",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::954503069243:oidc-provider/oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41:aud\": \"sts.amazonaws.com\",\n          \"oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41:sub\": \"system:serviceaccount:kube-system:aws-load-balancer-controller-sa\"\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "sts.amazonaws.com"
                    ],
                    "variable": "oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41:aud"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:kube-system:aws-load-balancer-controller-sa"
                    ],
                    "variable": "oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::954503069243:oidc-provider/oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_blueprints_addons.module.aws_load_balancer_controller",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3712473960",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:CreateServiceLinkedRole\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"iam:AWSServiceName\": \"elasticloadbalancing.amazonaws.com\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:DescribeTrustStores\",\n        \"elasticloadbalancing:DescribeTargetHealth\",\n        \"elasticloadbalancing:DescribeTargetGroups\",\n        \"elasticloadbalancing:DescribeTargetGroupAttributes\",\n        \"elasticloadbalancing:DescribeTags\",\n        \"elasticloadbalancing:DescribeSSLPolicies\",\n        \"elasticloadbalancing:DescribeRules\",\n        \"elasticloadbalancing:DescribeLoadBalancers\",\n        \"elasticloadbalancing:DescribeLoadBalancerAttributes\",\n        \"elasticloadbalancing:DescribeListeners\",\n        \"elasticloadbalancing:DescribeListenerCertificates\",\n        \"ec2:GetCoipPoolUsage\",\n        \"ec2:DescribeVpcs\",\n        \"ec2:DescribeVpcPeeringConnections\",\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeSubnets\",\n        \"ec2:DescribeSecurityGroups\",\n        \"ec2:DescribeNetworkInterfaces\",\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeInstances\",\n        \"ec2:DescribeCoipPools\",\n        \"ec2:DescribeAvailabilityZones\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"wafv2:GetWebACLForResource\",\n        \"wafv2:GetWebACL\",\n        \"wafv2:DisassociateWebACL\",\n        \"wafv2:AssociateWebACL\",\n        \"waf-regional:GetWebACLForResource\",\n        \"waf-regional:GetWebACL\",\n        \"waf-regional:DisassociateWebACL\",\n        \"waf-regional:AssociateWebACL\",\n        \"shield:GetSubscriptionState\",\n        \"shield:DescribeProtection\",\n        \"shield:DeleteProtection\",\n        \"shield:CreateProtection\",\n        \"iam:ListServerCertificates\",\n        \"iam:GetServerCertificate\",\n        \"cognito-idp:DescribeUserPoolClient\",\n        \"acm:ListCertificates\",\n        \"acm:DescribeCertificate\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:RevokeSecurityGroupIngress\",\n        \"ec2:AuthorizeSecurityGroupIngress\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateSecurityGroup\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateTags\",\n      \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        },\n        \"StringEquals\": {\n          \"ec2:CreateAction\": \"CreateSecurityGroup\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteTags\",\n        \"ec2:CreateTags\"\n      ],\n      \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:RevokeSecurityGroupIngress\",\n        \"ec2:DeleteSecurityGroup\",\n        \"ec2:AuthorizeSecurityGroupIngress\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:CreateTargetGroup\",\n        \"elasticloadbalancing:CreateLoadBalancer\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:DeleteRule\",\n        \"elasticloadbalancing:DeleteListener\",\n        \"elasticloadbalancing:CreateRule\",\n        \"elasticloadbalancing:CreateListener\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RemoveTags\",\n        \"elasticloadbalancing:AddTags\"\n      ],\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n      ],\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RemoveTags\",\n        \"elasticloadbalancing:AddTags\"\n      ],\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:SetSubnets\",\n        \"elasticloadbalancing:SetSecurityGroups\",\n        \"elasticloadbalancing:SetIpAddressType\",\n        \"elasticloadbalancing:ModifyTargetGroupAttributes\",\n        \"elasticloadbalancing:ModifyTargetGroup\",\n        \"elasticloadbalancing:ModifyLoadBalancerAttributes\",\n        \"elasticloadbalancing:DeleteTargetGroup\",\n        \"elasticloadbalancing:DeleteLoadBalancer\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"elasticloadbalancing:AddTags\",\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n      ],\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        },\n        \"StringEquals\": {\n          \"elasticloadbalancing:CreateAction\": [\n            \"CreateTargetGroup\",\n            \"CreateLoadBalancer\"\n          ]\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RegisterTargets\",\n        \"elasticloadbalancing:DeregisterTargets\"\n      ],\n      \"Resource\": \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:SetWebAcl\",\n        \"elasticloadbalancing:RemoveListenerCertificates\",\n        \"elasticloadbalancing:ModifyRule\",\n        \"elasticloadbalancing:ModifyListener\",\n        \"elasticloadbalancing:AddListenerCertificates\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": [
              "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:CreateServiceLinkedRole\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"iam:AWSServiceName\": \"elasticloadbalancing.amazonaws.com\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:DescribeTrustStores\",\n        \"elasticloadbalancing:DescribeTargetHealth\",\n        \"elasticloadbalancing:DescribeTargetGroups\",\n        \"elasticloadbalancing:DescribeTargetGroupAttributes\",\n        \"elasticloadbalancing:DescribeTags\",\n        \"elasticloadbalancing:DescribeSSLPolicies\",\n        \"elasticloadbalancing:DescribeRules\",\n        \"elasticloadbalancing:DescribeLoadBalancers\",\n        \"elasticloadbalancing:DescribeLoadBalancerAttributes\",\n        \"elasticloadbalancing:DescribeListeners\",\n        \"elasticloadbalancing:DescribeListenerCertificates\",\n        \"ec2:GetCoipPoolUsage\",\n        \"ec2:DescribeVpcs\",\n        \"ec2:DescribeVpcPeeringConnections\",\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeSubnets\",\n        \"ec2:DescribeSecurityGroups\",\n        \"ec2:DescribeNetworkInterfaces\",\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeInstances\",\n        \"ec2:DescribeCoipPools\",\n        \"ec2:DescribeAvailabilityZones\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"wafv2:GetWebACLForResource\",\n        \"wafv2:GetWebACL\",\n        \"wafv2:DisassociateWebACL\",\n        \"wafv2:AssociateWebACL\",\n        \"waf-regional:GetWebACLForResource\",\n        \"waf-regional:GetWebACL\",\n        \"waf-regional:DisassociateWebACL\",\n        \"waf-regional:AssociateWebACL\",\n        \"shield:GetSubscriptionState\",\n        \"shield:DescribeProtection\",\n        \"shield:DeleteProtection\",\n        \"shield:CreateProtection\",\n        \"iam:ListServerCertificates\",\n        \"iam:GetServerCertificate\",\n        \"cognito-idp:DescribeUserPoolClient\",\n        \"acm:ListCertificates\",\n        \"acm:DescribeCertificate\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:RevokeSecurityGroupIngress\",\n        \"ec2:AuthorizeSecurityGroupIngress\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateSecurityGroup\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateTags\",\n      \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        },\n        \"StringEquals\": {\n          \"ec2:CreateAction\": \"CreateSecurityGroup\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteTags\",\n        \"ec2:CreateTags\"\n      ],\n      \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:RevokeSecurityGroupIngress\",\n        \"ec2:DeleteSecurityGroup\",\n        \"ec2:AuthorizeSecurityGroupIngress\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:CreateTargetGroup\",\n        \"elasticloadbalancing:CreateLoadBalancer\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:DeleteRule\",\n        \"elasticloadbalancing:DeleteListener\",\n        \"elasticloadbalancing:CreateRule\",\n        \"elasticloadbalancing:CreateListener\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RemoveTags\",\n        \"elasticloadbalancing:AddTags\"\n      ],\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n      ],\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RemoveTags\",\n        \"elasticloadbalancing:AddTags\"\n      ],\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:SetSubnets\",\n        \"elasticloadbalancing:SetSecurityGroups\",\n        \"elasticloadbalancing:SetIpAddressType\",\n        \"elasticloadbalancing:ModifyTargetGroupAttributes\",\n        \"elasticloadbalancing:ModifyTargetGroup\",\n        \"elasticloadbalancing:ModifyLoadBalancerAttributes\",\n        \"elasticloadbalancing:DeleteTargetGroup\",\n        \"elasticloadbalancing:DeleteLoadBalancer\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"elasticloadbalancing:AddTags\",\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n      ],\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        },\n        \"StringEquals\": {\n          \"elasticloadbalancing:CreateAction\": [\n            \"CreateTargetGroup\",\n            \"CreateLoadBalancer\"\n          ]\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RegisterTargets\",\n        \"elasticloadbalancing:DeregisterTargets\"\n      ],\n      \"Resource\": \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:SetWebAcl\",\n        \"elasticloadbalancing:RemoveListenerCertificates\",\n        \"elasticloadbalancing:ModifyRule\",\n        \"elasticloadbalancing:ModifyListener\",\n        \"elasticloadbalancing:AddListenerCertificates\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}"
            ],
            "statement": null,
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_blueprints_addons.module.aws_load_balancer_controller",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_blueprints_addons.module.aws_load_balancer_controller",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::954503069243:policy/alb-controller-20240525115217392500000002",
            "description": "IAM Policy for AWS Load Balancer Controller",
            "id": "arn:aws:iam::954503069243:policy/alb-controller-20240525115217392500000002",
            "name": "alb-controller-20240525115217392500000002",
            "name_prefix": "alb-controller-",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":\"iam:CreateServiceLinkedRole\",\"Condition\":{\"StringEquals\":{\"iam:AWSServiceName\":\"elasticloadbalancing.amazonaws.com\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:DescribeTrustStores\",\"elasticloadbalancing:DescribeTargetHealth\",\"elasticloadbalancing:DescribeTargetGroups\",\"elasticloadbalancing:DescribeTargetGroupAttributes\",\"elasticloadbalancing:DescribeTags\",\"elasticloadbalancing:DescribeSSLPolicies\",\"elasticloadbalancing:DescribeRules\",\"elasticloadbalancing:DescribeLoadBalancers\",\"elasticloadbalancing:DescribeLoadBalancerAttributes\",\"elasticloadbalancing:DescribeListeners\",\"elasticloadbalancing:DescribeListenerCertificates\",\"ec2:GetCoipPoolUsage\",\"ec2:DescribeVpcs\",\"ec2:DescribeVpcPeeringConnections\",\"ec2:DescribeTags\",\"ec2:DescribeSubnets\",\"ec2:DescribeSecurityGroups\",\"ec2:DescribeNetworkInterfaces\",\"ec2:DescribeInternetGateways\",\"ec2:DescribeInstances\",\"ec2:DescribeCoipPools\",\"ec2:DescribeAvailabilityZones\",\"ec2:DescribeAddresses\",\"ec2:DescribeAccountAttributes\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"wafv2:GetWebACLForResource\",\"wafv2:GetWebACL\",\"wafv2:DisassociateWebACL\",\"wafv2:AssociateWebACL\",\"waf-regional:GetWebACLForResource\",\"waf-regional:GetWebACL\",\"waf-regional:DisassociateWebACL\",\"waf-regional:AssociateWebACL\",\"shield:GetSubscriptionState\",\"shield:DescribeProtection\",\"shield:DeleteProtection\",\"shield:CreateProtection\",\"iam:ListServerCertificates\",\"iam:GetServerCertificate\",\"cognito-idp:DescribeUserPoolClient\",\"acm:ListCertificates\",\"acm:DescribeCertificate\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:RevokeSecurityGroupIngress\",\"ec2:AuthorizeSecurityGroupIngress\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:CreateSecurityGroup\",\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:CreateTags\",\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"ec2:CreateAction\":\"CreateSecurityGroup\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:DeleteTags\",\"ec2:CreateTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:RevokeSecurityGroupIngress\",\"ec2:DeleteSecurityGroup\",\"ec2:AuthorizeSecurityGroupIngress\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:CreateTargetGroup\",\"elasticloadbalancing:CreateLoadBalancer\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:DeleteRule\",\"elasticloadbalancing:DeleteListener\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:CreateListener\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:RemoveTags\",\"elasticloadbalancing:AddTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"]},{\"Action\":[\"elasticloadbalancing:RemoveTags\",\"elasticloadbalancing:AddTags\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"]},{\"Action\":[\"elasticloadbalancing:SetSubnets\",\"elasticloadbalancing:SetSecurityGroups\",\"elasticloadbalancing:SetIpAddressType\",\"elasticloadbalancing:ModifyTargetGroupAttributes\",\"elasticloadbalancing:ModifyTargetGroup\",\"elasticloadbalancing:ModifyLoadBalancerAttributes\",\"elasticloadbalancing:DeleteTargetGroup\",\"elasticloadbalancing:DeleteLoadBalancer\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"elasticloadbalancing:AddTags\",\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"elasticloadbalancing:CreateAction\":[\"CreateTargetGroup\",\"CreateLoadBalancer\"]}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"]},{\"Action\":[\"elasticloadbalancing:RegisterTargets\",\"elasticloadbalancing:DeregisterTargets\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"},{\"Action\":[\"elasticloadbalancing:SetWebAcl\",\"elasticloadbalancing:RemoveListenerCertificates\",\"elasticloadbalancing:ModifyRule\",\"elasticloadbalancing:ModifyListener\",\"elasticloadbalancing:AddListenerCertificates\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA54PGQ7Y5XL5Z4C7AS",
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "TeamName": "RnD"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "TeamName": "RnD"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_blueprints_addons.data.aws_iam_policy_document.aws_load_balancer_controller",
            "module.eks_blueprints_addons.data.aws_partition.current",
            "module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_iam_policy_document.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks_blueprints_addons.module.aws_load_balancer_controller",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::954503069243:role/alb-controller-20240525120223040700000019",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41:aud\":\"sts.amazonaws.com\",\"oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41:sub\":\"system:serviceaccount:kube-system:aws-load-balancer-controller-sa\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::954503069243:oidc-provider/oidc.eks.eu-central-1.amazonaws.com/id/FD27A287D4407698E396C00358033F41\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-05-25T12:02:23Z",
            "description": "IRSA for aws-load-balancer-controller project",
            "force_detach_policies": true,
            "id": "alb-controller-20240525120223040700000019",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::954503069243:policy/alb-controller-20240525115217392500000002"
            ],
            "max_session_duration": 3600,
            "name": "alb-controller-20240525120223040700000019",
            "name_prefix": "alb-controller-",
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "TeamName": "RnD"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "TeamName": "RnD"
            },
            "unique_id": "AROA54PGQ7Y56CXKYJ3P5"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_caller_identity.current",
            "module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_iam_policy_document.assume",
            "module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_partition.current",
            "module.eks_blueprints_addons.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks_blueprints_addons.module.aws_load_balancer_controller",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "alb-controller-20240525120223040700000019-2024052512022346960000001a",
            "policy_arn": "arn:aws:iam::954503069243:policy/alb-controller-20240525115217392500000002",
            "role": "alb-controller-20240525120223040700000019"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks_blueprints_addons.data.aws_iam_policy_document.aws_load_balancer_controller",
            "module.eks_blueprints_addons.data.aws_partition.current",
            "module.eks_blueprints_addons.module.aws_load_balancer_controller.aws_iam_policy.this",
            "module.eks_blueprints_addons.module.aws_load_balancer_controller.aws_iam_role.this",
            "module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_caller_identity.current",
            "module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_iam_policy_document.assume",
            "module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_iam_policy_document.this",
            "module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_partition.current",
            "module.eks_blueprints_addons.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks_blueprints_addons.module.aws_load_balancer_controller",
      "mode": "managed",
      "type": "helm_release",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "aws-load-balancer-controller",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": "A Helm chart to deploy aws-load-balancer-controller for ingress resources",
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "aws-load-balancer-controller",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.7.1",
                "chart": "aws-load-balancer-controller",
                "name": "aws-load-balancer-controller",
                "namespace": "kube-system",
                "revision": 1,
                "values": "{\"clusterName\":\"testing-innovation-poc\",\"serviceAccount\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::954503069243:role/alb-controller-20240525120223040700000019\"},\"name\":\"aws-load-balancer-controller-sa\"}}",
                "version": "1.7.1"
              }
            ],
            "name": "aws-load-balancer-controller",
            "namespace": "kube-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://aws.github.io/eks-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "clusterName",
                "type": "",
                "value": "testing-innovation-poc"
              },
              {
                "name": "serviceAccount.annotations.eks\\.amazonaws\\.com/role-arn",
                "type": "",
                "value": "arn:aws:iam::954503069243:role/alb-controller-20240525120223040700000019"
              },
              {
                "name": "serviceAccount.name",
                "type": "",
                "value": "aws-load-balancer-controller-sa"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [],
            "verify": false,
            "version": "1.7.1",
            "wait": false,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "data.aws_eks_cluster_auth.this",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks_blueprints_addons.module.aws_load_balancer_controller.aws_iam_role.this",
            "module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_caller_identity.current",
            "module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_iam_policy_document.assume",
            "module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_partition.current",
            "module.eks_blueprints_addons.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_db_subnet_group",
      "name": "database",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:rds:eu-central-1:954503069243:subgrp:testing-innovation-vpc-poc",
            "description": "Database subnet group for testing-innovation-vpc-poc",
            "id": "testing-innovation-vpc-poc",
            "name": "testing-innovation-vpc-poc",
            "name_prefix": "",
            "subnet_ids": [
              "subnet-04e32fc440eb85c5b",
              "subnet-06ba1e2be3185be21"
            ],
            "supported_network_types": [
              "IPV4"
            ],
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc",
              "TeamName": "RnD"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc",
              "TeamName": "RnD"
            },
            "vpc_id": "vpc-02cf70e1064776ace"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_subnet.database",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_default_network_acl",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:954503069243:network-acl/acl-0f5637abaacb4dfe1",
            "default_network_acl_id": "acl-0f5637abaacb4dfe1",
            "egress": [
              {
                "action": "allow",
                "cidr_block": "",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "::/0",
                "protocol": "-1",
                "rule_no": 101,
                "to_port": 0
              },
              {
                "action": "allow",
                "cidr_block": "0.0.0.0/0",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "",
                "protocol": "-1",
                "rule_no": 100,
                "to_port": 0
              }
            ],
            "id": "acl-0f5637abaacb4dfe1",
            "ingress": [
              {
                "action": "allow",
                "cidr_block": "",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "::/0",
                "protocol": "-1",
                "rule_no": 101,
                "to_port": 0
              },
              {
                "action": "allow",
                "cidr_block": "0.0.0.0/0",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "",
                "protocol": "-1",
                "rule_no": 100,
                "to_port": 0
              }
            ],
            "owner_id": "954503069243",
            "subnet_ids": [
              "subnet-04e32fc440eb85c5b",
              "subnet-055d0583ea36db72d",
              "subnet-05823175ac7f7bab9",
              "subnet-06ba1e2be3185be21",
              "subnet-0a4388bebdd437942",
              "subnet-0d6c2381ffc151640"
            ],
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-default",
              "TeamName": "RnD"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-default",
              "TeamName": "RnD"
            },
            "vpc_id": "vpc-02cf70e1064776ace"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_default_route_table",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:954503069243:route-table/rtb-0625ee51ca5e53328",
            "default_route_table_id": "rtb-0625ee51ca5e53328",
            "id": "rtb-0625ee51ca5e53328",
            "owner_id": "954503069243",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-default",
              "TeamName": "RnD"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-default",
              "TeamName": "RnD"
            },
            "timeouts": {
              "create": "5m",
              "update": "5m"
            },
            "vpc_id": "vpc-02cf70e1064776ace"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_default_security_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:954503069243:security-group/sg-0819e7914971513d1",
            "description": "default VPC security group",
            "egress": [],
            "id": "sg-0819e7914971513d1",
            "ingress": [],
            "name": "default",
            "name_prefix": "",
            "owner_id": "954503069243",
            "revoke_rules_on_delete": false,
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-default",
              "TeamName": "RnD"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-default",
              "TeamName": "RnD"
            },
            "vpc_id": "vpc-02cf70e1064776ace"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "address": null,
            "allocation_id": "eipalloc-0eb7aa8cea2121304",
            "associate_with_private_ip": null,
            "association_id": "eipassoc-0e0d3f5a806da816f",
            "carrier_ip": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "id": "eipalloc-0eb7aa8cea2121304",
            "instance": "",
            "network_border_group": "eu-central-1",
            "network_interface": "eni-008e452f229f99d37",
            "private_dns": "ip-10-107-160-148.eu-central-1.compute.internal",
            "private_ip": "10.107.160.148",
            "public_dns": "ec2-18-199-182-237.eu-central-1.compute.amazonaws.com",
            "public_ip": "18.199.182.237",
            "public_ipv4_pool": "amazon",
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-eu-central-1a",
              "TeamName": "RnD"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-eu-central-1a",
              "TeamName": "RnD"
            },
            "timeouts": null,
            "vpc": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:954503069243:internet-gateway/igw-08a4254ea8866436e",
            "id": "igw-08a4254ea8866436e",
            "owner_id": "954503069243",
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc",
              "TeamName": "RnD"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc",
              "TeamName": "RnD"
            },
            "timeouts": null,
            "vpc_id": "vpc-02cf70e1064776ace"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allocation_id": "eipalloc-0eb7aa8cea2121304",
            "association_id": "eipassoc-0e0d3f5a806da816f",
            "connectivity_type": "public",
            "id": "nat-0fd541ca447bb25d9",
            "network_interface_id": "eni-008e452f229f99d37",
            "private_ip": "10.107.160.148",
            "public_ip": "18.199.182.237",
            "secondary_allocation_ids": [],
            "secondary_private_ip_address_count": 0,
            "secondary_private_ip_addresses": [],
            "subnet_id": "subnet-0d6c2381ffc151640",
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-eu-central-1a",
              "TeamName": "RnD"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-eu-central-1a",
              "TeamName": "RnD"
            },
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTgwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_nat_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "core_network_arn": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "",
            "id": "r-rtb-0a7e7b2bf8dffc5c41080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "nat-0fd541ca447bb25d9",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0a7e7b2bf8dffc5c4",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_nat_gateway.this",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "core_network_arn": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "igw-08a4254ea8866436e",
            "id": "r-rtb-076e4bd34307ace551080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-076e4bd34307ace55",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "database",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:954503069243:route-table/rtb-066d4866b40991260",
            "id": "rtb-066d4866b40991260",
            "owner_id": "954503069243",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-db",
              "TeamName": "RnD"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-db",
              "TeamName": "RnD"
            },
            "timeouts": null,
            "vpc_id": "vpc-02cf70e1064776ace"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:954503069243:route-table/rtb-0a7e7b2bf8dffc5c4",
            "id": "rtb-0a7e7b2bf8dffc5c4",
            "owner_id": "954503069243",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "core_network_arn": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "nat-0fd541ca447bb25d9",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-private",
              "TeamName": "RnD"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-private",
              "TeamName": "RnD"
            },
            "timeouts": null,
            "vpc_id": "vpc-02cf70e1064776ace"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:954503069243:route-table/rtb-076e4bd34307ace55",
            "id": "rtb-076e4bd34307ace55",
            "owner_id": "954503069243",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "core_network_arn": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "igw-08a4254ea8866436e",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-public",
              "TeamName": "RnD"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-public",
              "TeamName": "RnD"
            },
            "timeouts": null,
            "vpc_id": "vpc-02cf70e1064776ace"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "database",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0b3158656d4d9da28",
            "route_table_id": "rtb-066d4866b40991260",
            "subnet_id": "subnet-04e32fc440eb85c5b",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.database",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.database",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-078631a4cdfb7b769",
            "route_table_id": "rtb-066d4866b40991260",
            "subnet_id": "subnet-06ba1e2be3185be21",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.database",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.database",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-05ad06f22cd02f0a7",
            "route_table_id": "rtb-0a7e7b2bf8dffc5c4",
            "subnet_id": "subnet-0a4388bebdd437942",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-02d2dd95eea1ac842",
            "route_table_id": "rtb-0a7e7b2bf8dffc5c4",
            "subnet_id": "subnet-05823175ac7f7bab9",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-01036158655642bb2",
            "route_table_id": "rtb-076e4bd34307ace55",
            "subnet_id": "subnet-0d6c2381ffc151640",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-03c8433b520967a45",
            "route_table_id": "rtb-076e4bd34307ace55",
            "subnet_id": "subnet-055d0583ea36db72d",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "database",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:954503069243:subnet/subnet-04e32fc440eb85c5b",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "eu-central-1a",
            "availability_zone_id": "euc1-az2",
            "cidr_block": "10.107.160.192/27",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-04e32fc440eb85c5b",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "954503069243",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-db-eu-central-1a",
              "TeamName": "RnD"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-db-eu-central-1a",
              "TeamName": "RnD"
            },
            "timeouts": null,
            "vpc_id": "vpc-02cf70e1064776ace"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:954503069243:subnet/subnet-06ba1e2be3185be21",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "eu-central-1b",
            "availability_zone_id": "euc1-az3",
            "cidr_block": "10.107.160.224/27",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-06ba1e2be3185be21",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "954503069243",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-db-eu-central-1b",
              "TeamName": "RnD"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-db-eu-central-1b",
              "TeamName": "RnD"
            },
            "timeouts": null,
            "vpc_id": "vpc-02cf70e1064776ace"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:954503069243:subnet/subnet-0a4388bebdd437942",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "eu-central-1a",
            "availability_zone_id": "euc1-az2",
            "cidr_block": "10.107.160.0/26",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0a4388bebdd437942",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "954503069243",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-private-eu-central-1a",
              "TeamName": "RnD",
              "kubernetes.io/cluster/testing-innovation-poc": "owned",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-private-eu-central-1a",
              "TeamName": "RnD",
              "kubernetes.io/cluster/testing-innovation-poc": "owned",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-02cf70e1064776ace"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:954503069243:subnet/subnet-05823175ac7f7bab9",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "eu-central-1b",
            "availability_zone_id": "euc1-az3",
            "cidr_block": "10.107.160.64/26",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-05823175ac7f7bab9",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "954503069243",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-private-eu-central-1b",
              "TeamName": "RnD",
              "kubernetes.io/cluster/testing-innovation-poc": "owned",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-private-eu-central-1b",
              "TeamName": "RnD",
              "kubernetes.io/cluster/testing-innovation-poc": "owned",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-02cf70e1064776ace"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:954503069243:subnet/subnet-0d6c2381ffc151640",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "eu-central-1a",
            "availability_zone_id": "euc1-az2",
            "cidr_block": "10.107.160.128/27",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0d6c2381ffc151640",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "954503069243",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-public-eu-central-1a",
              "TeamName": "RnD",
              "kubernetes.io/cluster/testing-innovation-poc": "owned",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-public-eu-central-1a",
              "TeamName": "RnD",
              "kubernetes.io/cluster/testing-innovation-poc": "owned",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-02cf70e1064776ace"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:954503069243:subnet/subnet-055d0583ea36db72d",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "eu-central-1b",
            "availability_zone_id": "euc1-az3",
            "cidr_block": "10.107.160.160/27",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-055d0583ea36db72d",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "954503069243",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-public-eu-central-1b",
              "TeamName": "RnD",
              "kubernetes.io/cluster/testing-innovation-poc": "owned",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc-public-eu-central-1b",
              "TeamName": "RnD",
              "kubernetes.io/cluster/testing-innovation-poc": "owned",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-02cf70e1064776ace"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:954503069243:vpc/vpc-02cf70e1064776ace",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "10.107.160.0/24",
            "default_network_acl_id": "acl-0f5637abaacb4dfe1",
            "default_route_table_id": "rtb-0625ee51ca5e53328",
            "default_security_group_id": "sg-0819e7914971513d1",
            "dhcp_options_id": "dopt-0e5151266d2aa42cf",
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "enable_network_address_usage_metrics": false,
            "id": "vpc-02cf70e1064776ace",
            "instance_tenancy": "default",
            "ipv4_ipam_pool_id": null,
            "ipv4_netmask_length": null,
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_network_border_group": "",
            "ipv6_ipam_pool_id": "",
            "ipv6_netmask_length": 0,
            "main_route_table_id": "rtb-0625ee51ca5e53328",
            "owner_id": "954503069243",
            "tags": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc",
              "TeamName": "RnD"
            },
            "tags_all": {
              "Businessunit": "testing",
              "Environment": "poc",
              "Managedby": "Terraform",
              "Name": "testing-innovation-vpc-poc",
              "TeamName": "RnD"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "create_before_destroy": true
        }
      ]
    }
  ],
  "check_results": [
    {
      "object_kind": "resource",
      "config_addr": "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
      "status": "pass",
      "objects": null
    },
    {
      "object_kind": "resource",
      "config_addr": "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
      "status": "pass",
      "objects": [
        {
          "object_addr": "module.eks.module.eks_managed_node_group[\"core_node_group\"].module.user_data.null_resource.validate_cluster_service_cidr",
          "status": "pass"
        }
      ]
    }
  ]
}
